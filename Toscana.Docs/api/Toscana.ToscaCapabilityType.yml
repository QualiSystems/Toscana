### YamlMime:ManagedReference
items:
- uid: Toscana.ToscaCapabilityType
  commentId: T:Toscana.ToscaCapabilityType
  id: ToscaCapabilityType
  parent: Toscana
  children:
  - Toscana.ToscaCapabilityType.#ctor
  - Toscana.ToscaCapabilityType.Attributes
  - Toscana.ToscaCapabilityType.Base
  - Toscana.ToscaCapabilityType.Description
  - Toscana.ToscaCapabilityType.IsDerivedFrom(System.String)
  - Toscana.ToscaCapabilityType.Properties
  - Toscana.ToscaCapabilityType.SetDerivedFromToRoot(System.String)
  - Toscana.ToscaCapabilityType.ValidSourceTypes
  - Toscana.ToscaCapabilityType.Version
  langs:
  - csharp
  - vb
  name: ToscaCapabilityType
  nameWithType: ToscaCapabilityType
  fullName: Toscana.ToscaCapabilityType
  type: Class
  source:
    remote:
      path: Toscana/ToscaCapabilityType.cs
      branch: master
      repo: https://github.com/QualiSystems/Toscana.git
    id: ToscaCapabilityType
    path: Toscana/ToscaCapabilityType.cs
    startLine: 8
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nRepresents TOSCA Capability type\n"
  example: []
  syntax:
    content: 'public class ToscaCapabilityType : ToscaObject'
    content.vb: >-
      Public Class ToscaCapabilityType
          Inherits ToscaObject
  inheritance:
  - System.Object
  - Toscana.ToscaObject
  inheritedMembers:
  - Toscana.ToscaObject.cloudServiceArchive
  - Toscana.ToscaObject.DerivedFrom
  - Toscana.ToscaObject.IsRoot
  - Toscana.ToscaObject.SetToscaCloudServiceArchive(Toscana.ToscaCloudServiceArchive)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Toscana.ToscaCapabilityType.Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{Toscana.ToscaCapabilityType,Toscana.ToscaCapabilityType},System.Func{Toscana.ToscaCapabilityType,System.Boolean})
  - Toscana.ToscaCapabilityType.Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{Toscana.ToscaCapabilityType,Toscana.ToscaCapabilityType})
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Toscana.ToscaCapabilityType.#ctor
  commentId: M:Toscana.ToscaCapabilityType.#ctor
  id: '#ctor'
  parent: Toscana.ToscaCapabilityType
  langs:
  - csharp
  - vb
  name: ToscaCapabilityType()
  nameWithType: ToscaCapabilityType.ToscaCapabilityType()
  fullName: Toscana.ToscaCapabilityType.ToscaCapabilityType()
  type: Constructor
  source:
    remote:
      path: Toscana/ToscaCapabilityType.cs
      branch: master
      repo: https://github.com/QualiSystems/Toscana.git
    id: .ctor
    path: Toscana/ToscaCapabilityType.cs
    startLine: 13
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nInstantiates an instance of ToscaCapabilityType\n"
  example: []
  syntax:
    content: public ToscaCapabilityType()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Toscana.ToscaCapabilityType.Version
  commentId: P:Toscana.ToscaCapabilityType.Version
  id: Version
  parent: Toscana.ToscaCapabilityType
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: ToscaCapabilityType.Version
  fullName: Toscana.ToscaCapabilityType.Version
  type: Property
  source:
    remote:
      path: Toscana/ToscaCapabilityType.cs
      branch: master
      repo: https://github.com/QualiSystems/Toscana.git
    id: Version
    path: Toscana/ToscaCapabilityType.cs
    startLine: 23
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nAn optional version for the Capability Type definition.\n"
  example: []
  syntax:
    content: public string Version { get; set; }
    content.vb: Public Property Version As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Toscana.ToscaCapabilityType.Description
  commentId: P:Toscana.ToscaCapabilityType.Description
  id: Description
  parent: Toscana.ToscaCapabilityType
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: ToscaCapabilityType.Description
  fullName: Toscana.ToscaCapabilityType.Description
  type: Property
  source:
    remote:
      path: Toscana/ToscaCapabilityType.cs
      branch: master
      repo: https://github.com/QualiSystems/Toscana.git
    id: Description
    path: Toscana/ToscaCapabilityType.cs
    startLine: 28
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nAn optional description for the Capability Type.\n"
  example: []
  syntax:
    content: public string Description { get; set; }
    content.vb: Public Property Description As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Toscana.ToscaCapabilityType.Properties
  commentId: P:Toscana.ToscaCapabilityType.Properties
  id: Properties
  parent: Toscana.ToscaCapabilityType
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: ToscaCapabilityType.Properties
  fullName: Toscana.ToscaCapabilityType.Properties
  type: Property
  source:
    remote:
      path: Toscana/ToscaCapabilityType.cs
      branch: master
      repo: https://github.com/QualiSystems/Toscana.git
    id: Properties
    path: Toscana/ToscaCapabilityType.cs
    startLine: 33
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nAn optional list of property definitions for the Capability Type.\n"
  example: []
  syntax:
    content: public Dictionary<string, ToscaPropertyDefinition> Properties { get; set; }
    content.vb: Public Property Properties As Dictionary(Of String, ToscaPropertyDefinition)
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,Toscana.ToscaPropertyDefinition}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Toscana.ToscaCapabilityType.Attributes
  commentId: P:Toscana.ToscaCapabilityType.Attributes
  id: Attributes
  parent: Toscana.ToscaCapabilityType
  langs:
  - csharp
  - vb
  name: Attributes
  nameWithType: ToscaCapabilityType.Attributes
  fullName: Toscana.ToscaCapabilityType.Attributes
  type: Property
  source:
    remote:
      path: Toscana/ToscaCapabilityType.cs
      branch: master
      repo: https://github.com/QualiSystems/Toscana.git
    id: Attributes
    path: Toscana/ToscaCapabilityType.cs
    startLine: 38
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nAn optional list of attribute definitions for the Capability Type.\n"
  example: []
  syntax:
    content: public Dictionary<string, ToscaAttributeDefinition> Attributes { get; set; }
    content.vb: Public Property Attributes As Dictionary(Of String, ToscaAttributeDefinition)
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,Toscana.ToscaAttributeDefinition}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Toscana.ToscaCapabilityType.ValidSourceTypes
  commentId: P:Toscana.ToscaCapabilityType.ValidSourceTypes
  id: ValidSourceTypes
  parent: Toscana.ToscaCapabilityType
  langs:
  - csharp
  - vb
  name: ValidSourceTypes
  nameWithType: ToscaCapabilityType.ValidSourceTypes
  fullName: Toscana.ToscaCapabilityType.ValidSourceTypes
  type: Property
  source:
    remote:
      path: Toscana/ToscaCapabilityType.cs
      branch: master
      repo: https://github.com/QualiSystems/Toscana.git
    id: ValidSourceTypes
    path: Toscana/ToscaCapabilityType.cs
    startLine: 43
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nAn optional list of one or more valid names of Node Types that are supported as valid sources of any relationship established to the declared Capability Type.\n"
  example: []
  syntax:
    content: public string[] ValidSourceTypes { get; set; }
    content.vb: Public Property ValidSourceTypes As String()
    parameters: []
    return:
      type: System.String[]
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Toscana.ToscaCapabilityType.Base
  commentId: P:Toscana.ToscaCapabilityType.Base
  id: Base
  parent: Toscana.ToscaCapabilityType
  langs:
  - csharp
  - vb
  name: Base
  nameWithType: ToscaCapabilityType.Base
  fullName: Toscana.ToscaCapabilityType.Base
  type: Property
  source:
    remote:
      path: Toscana/ToscaCapabilityType.cs
      branch: master
      repo: https://github.com/QualiSystems/Toscana.git
    id: Base
    path: Toscana/ToscaCapabilityType.cs
    startLine: 51
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nReturns CapabilityType that this Capability Type derives from.\nIf this Capability Type is root, null will be returned\nIf this Capability Type derives from a non existing Capability Type <xref href=\"Toscana.Exceptions.ToscaCapabilityTypeNotFoundException\" data-throw-if-not-resolved=\"false\"></xref> will be thrown\n"
  example: []
  syntax:
    content: public ToscaCapabilityType Base { get; }
    content.vb: Public ReadOnly Property Base As ToscaCapabilityType
    parameters: []
    return:
      type: Toscana.ToscaCapabilityType
  exceptions:
  - type: Toscana.Exceptions.ToscaCapabilityTypeNotFoundException
    commentId: T:Toscana.Exceptions.ToscaCapabilityTypeNotFoundException
    description: Thrown when this Capability Type derives from a non existing Capability Type
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Toscana.ToscaCapabilityType.IsDerivedFrom(System.String)
  commentId: M:Toscana.ToscaCapabilityType.IsDerivedFrom(System.String)
  id: IsDerivedFrom(System.String)
  parent: Toscana.ToscaCapabilityType
  langs:
  - csharp
  - vb
  name: IsDerivedFrom(String)
  nameWithType: ToscaCapabilityType.IsDerivedFrom(String)
  fullName: Toscana.ToscaCapabilityType.IsDerivedFrom(System.String)
  type: Method
  source:
    remote:
      path: Toscana/ToscaCapabilityType.cs
      branch: master
      repo: https://github.com/QualiSystems/Toscana.git
    id: IsDerivedFrom
    path: Toscana/ToscaCapabilityType.cs
    startLine: 70
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nDeterminses whether the ToscaCapabilityType is derived from another capability type \n"
  example: []
  syntax:
    content: public bool IsDerivedFrom(string capabilityTypeName)
    content.vb: Public Function IsDerivedFrom(capabilityTypeName As String) As Boolean
    parameters:
    - id: capabilityTypeName
      type: System.String
      description: Name of the capability type to check
    return:
      type: System.Boolean
      description: True if derives rom, false otherwise
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Toscana.ToscaCapabilityType.SetDerivedFromToRoot(System.String)
  commentId: M:Toscana.ToscaCapabilityType.SetDerivedFromToRoot(System.String)
  id: SetDerivedFromToRoot(System.String)
  parent: Toscana.ToscaCapabilityType
  langs:
  - csharp
  - vb
  name: SetDerivedFromToRoot(String)
  nameWithType: ToscaCapabilityType.SetDerivedFromToRoot(String)
  fullName: Toscana.ToscaCapabilityType.SetDerivedFromToRoot(System.String)
  type: Method
  source:
    remote:
      path: Toscana/ToscaCapabilityType.cs
      branch: master
      repo: https://github.com/QualiSystems/Toscana.git
    id: SetDerivedFromToRoot
    path: Toscana/ToscaCapabilityType.cs
    startLine: 83
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nSets DerivedFrom to point to tosca.nodes.Root if it's not set\n"
  example: []
  syntax:
    content: public override void SetDerivedFromToRoot(string name)
    content.vb: Public Overrides Sub SetDerivedFromToRoot(name As String)
    parameters:
    - id: name
      type: System.String
      description: Node type name
  overridden: Toscana.ToscaObject.SetDerivedFromToRoot(System.String)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Toscana
  commentId: N:Toscana
  isExternal: false
  name: Toscana
  nameWithType: Toscana
  fullName: Toscana
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Toscana.ToscaObject
  commentId: T:Toscana.ToscaObject
  parent: Toscana
  isExternal: false
  name: ToscaObject
  nameWithType: ToscaObject
  fullName: Toscana.ToscaObject
- uid: Toscana.ToscaObject.cloudServiceArchive
  commentId: F:Toscana.ToscaObject.cloudServiceArchive
  parent: Toscana.ToscaObject
  isExternal: false
  name: cloudServiceArchive
  nameWithType: ToscaObject.cloudServiceArchive
  fullName: Toscana.ToscaObject.cloudServiceArchive
- uid: Toscana.ToscaObject.DerivedFrom
  commentId: P:Toscana.ToscaObject.DerivedFrom
  parent: Toscana.ToscaObject
  isExternal: false
  name: DerivedFrom
  nameWithType: ToscaObject.DerivedFrom
  fullName: Toscana.ToscaObject.DerivedFrom
- uid: Toscana.ToscaObject.IsRoot
  commentId: M:Toscana.ToscaObject.IsRoot
  parent: Toscana.ToscaObject
  isExternal: false
  name: IsRoot()
  nameWithType: ToscaObject.IsRoot()
  fullName: Toscana.ToscaObject.IsRoot()
  spec.csharp:
  - uid: Toscana.ToscaObject.IsRoot
    name: IsRoot
    nameWithType: ToscaObject.IsRoot
    fullName: Toscana.ToscaObject.IsRoot
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.ToscaObject.IsRoot
    name: IsRoot
    nameWithType: ToscaObject.IsRoot
    fullName: Toscana.ToscaObject.IsRoot
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Toscana.ToscaObject.SetToscaCloudServiceArchive(Toscana.ToscaCloudServiceArchive)
  commentId: M:Toscana.ToscaObject.SetToscaCloudServiceArchive(Toscana.ToscaCloudServiceArchive)
  parent: Toscana.ToscaObject
  isExternal: false
  name: SetToscaCloudServiceArchive(ToscaCloudServiceArchive)
  nameWithType: ToscaObject.SetToscaCloudServiceArchive(ToscaCloudServiceArchive)
  fullName: Toscana.ToscaObject.SetToscaCloudServiceArchive(Toscana.ToscaCloudServiceArchive)
  spec.csharp:
  - uid: Toscana.ToscaObject.SetToscaCloudServiceArchive(Toscana.ToscaCloudServiceArchive)
    name: SetToscaCloudServiceArchive
    nameWithType: ToscaObject.SetToscaCloudServiceArchive
    fullName: Toscana.ToscaObject.SetToscaCloudServiceArchive
  - name: (
    nameWithType: (
    fullName: (
  - uid: Toscana.ToscaCloudServiceArchive
    name: ToscaCloudServiceArchive
    nameWithType: ToscaCloudServiceArchive
    fullName: Toscana.ToscaCloudServiceArchive
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.ToscaObject.SetToscaCloudServiceArchive(Toscana.ToscaCloudServiceArchive)
    name: SetToscaCloudServiceArchive
    nameWithType: ToscaObject.SetToscaCloudServiceArchive
    fullName: Toscana.ToscaObject.SetToscaCloudServiceArchive
  - name: (
    nameWithType: (
    fullName: (
  - uid: Toscana.ToscaCloudServiceArchive
    name: ToscaCloudServiceArchive
    nameWithType: ToscaCloudServiceArchive
    fullName: Toscana.ToscaCloudServiceArchive
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Toscana.ToscaCapabilityType.Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{Toscana.ToscaCapabilityType,Toscana.ToscaCapabilityType},System.Func{Toscana.ToscaCapabilityType,System.Boolean})
  commentId: M:Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
  parent: Toscana.Common.EnumerableExtensions
  definition: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
  name: FromHierarchy<ToscaCapabilityType>(Func<ToscaCapabilityType, ToscaCapabilityType>, Func<ToscaCapabilityType, Boolean>)
  nameWithType: EnumerableExtensions.FromHierarchy<ToscaCapabilityType>(Func<ToscaCapabilityType, ToscaCapabilityType>, Func<ToscaCapabilityType, Boolean>)
  fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<Toscana.ToscaCapabilityType>(System.Func<Toscana.ToscaCapabilityType, Toscana.ToscaCapabilityType>, System.Func<Toscana.ToscaCapabilityType, System.Boolean>)
  nameWithType.vb: EnumerableExtensions.FromHierarchy(Of ToscaCapabilityType)(Func(Of ToscaCapabilityType, ToscaCapabilityType), Func(Of ToscaCapabilityType, Boolean))
  fullname.vb: Toscana.Common.EnumerableExtensions.FromHierarchy(Of Toscana.ToscaCapabilityType)(System.Func(Of Toscana.ToscaCapabilityType, Toscana.ToscaCapabilityType), System.Func(Of Toscana.ToscaCapabilityType, System.Boolean))
  name.vb: FromHierarchy(Of ToscaCapabilityType)(Func(Of ToscaCapabilityType, ToscaCapabilityType), Func(Of ToscaCapabilityType, Boolean))
  spec.csharp:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{``0,``0},System.Func{``0,System.Boolean})
    name: FromHierarchy<ToscaCapabilityType>
    nameWithType: EnumerableExtensions.FromHierarchy<ToscaCapabilityType>
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<Toscana.ToscaCapabilityType>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Toscana.ToscaCapabilityType
    name: ToscaCapabilityType
    nameWithType: ToscaCapabilityType
    fullName: Toscana.ToscaCapabilityType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Toscana.ToscaCapabilityType
    name: ToscaCapabilityType
    nameWithType: ToscaCapabilityType
    fullName: Toscana.ToscaCapabilityType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Toscana.ToscaCapabilityType
    name: ToscaCapabilityType
    nameWithType: ToscaCapabilityType
    fullName: Toscana.ToscaCapabilityType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{``0,``0},System.Func{``0,System.Boolean})
    name: FromHierarchy(Of ToscaCapabilityType)
    nameWithType: EnumerableExtensions.FromHierarchy(Of ToscaCapabilityType)
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy(Of Toscana.ToscaCapabilityType)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Toscana.ToscaCapabilityType
    name: ToscaCapabilityType
    nameWithType: ToscaCapabilityType
    fullName: Toscana.ToscaCapabilityType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Toscana.ToscaCapabilityType
    name: ToscaCapabilityType
    nameWithType: ToscaCapabilityType
    fullName: Toscana.ToscaCapabilityType
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Toscana.ToscaCapabilityType
    name: ToscaCapabilityType
    nameWithType: ToscaCapabilityType
    fullName: Toscana.ToscaCapabilityType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Toscana.ToscaCapabilityType.Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{Toscana.ToscaCapabilityType,Toscana.ToscaCapabilityType})
  commentId: M:Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
  parent: Toscana.Common.EnumerableExtensions
  definition: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
  name: FromHierarchy<ToscaCapabilityType>(Func<ToscaCapabilityType, ToscaCapabilityType>)
  nameWithType: EnumerableExtensions.FromHierarchy<ToscaCapabilityType>(Func<ToscaCapabilityType, ToscaCapabilityType>)
  fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<Toscana.ToscaCapabilityType>(System.Func<Toscana.ToscaCapabilityType, Toscana.ToscaCapabilityType>)
  nameWithType.vb: EnumerableExtensions.FromHierarchy(Of ToscaCapabilityType)(Func(Of ToscaCapabilityType, ToscaCapabilityType))
  fullname.vb: Toscana.Common.EnumerableExtensions.FromHierarchy(Of Toscana.ToscaCapabilityType)(System.Func(Of Toscana.ToscaCapabilityType, Toscana.ToscaCapabilityType))
  name.vb: FromHierarchy(Of ToscaCapabilityType)(Func(Of ToscaCapabilityType, ToscaCapabilityType))
  spec.csharp:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{``0,``0})
    name: FromHierarchy<ToscaCapabilityType>
    nameWithType: EnumerableExtensions.FromHierarchy<ToscaCapabilityType>
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<Toscana.ToscaCapabilityType>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Toscana.ToscaCapabilityType
    name: ToscaCapabilityType
    nameWithType: ToscaCapabilityType
    fullName: Toscana.ToscaCapabilityType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Toscana.ToscaCapabilityType
    name: ToscaCapabilityType
    nameWithType: ToscaCapabilityType
    fullName: Toscana.ToscaCapabilityType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{``0,``0})
    name: FromHierarchy(Of ToscaCapabilityType)
    nameWithType: EnumerableExtensions.FromHierarchy(Of ToscaCapabilityType)
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy(Of Toscana.ToscaCapabilityType)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Toscana.ToscaCapabilityType
    name: ToscaCapabilityType
    nameWithType: ToscaCapabilityType
    fullName: Toscana.ToscaCapabilityType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Toscana.ToscaCapabilityType
    name: ToscaCapabilityType
    nameWithType: ToscaCapabilityType
    fullName: Toscana.ToscaCapabilityType
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
  commentId: M:Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: FromHierarchy<TSource>(TSource, Func<TSource, TSource>, Func<TSource, Boolean>)
  nameWithType: EnumerableExtensions.FromHierarchy<TSource>(TSource, Func<TSource, TSource>, Func<TSource, Boolean>)
  fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<TSource>(TSource, System.Func<TSource, TSource>, System.Func<TSource, System.Boolean>)
  nameWithType.vb: EnumerableExtensions.FromHierarchy(Of TSource)(TSource, Func(Of TSource, TSource), Func(Of TSource, Boolean))
  fullname.vb: Toscana.Common.EnumerableExtensions.FromHierarchy(Of TSource)(TSource, System.Func(Of TSource, TSource), System.Func(Of TSource, System.Boolean))
  name.vb: FromHierarchy(Of TSource)(TSource, Func(Of TSource, TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
    name: FromHierarchy<TSource>
    nameWithType: EnumerableExtensions.FromHierarchy<TSource>
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
    name: FromHierarchy(Of TSource)
    nameWithType: EnumerableExtensions.FromHierarchy(Of TSource)
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Toscana.Common.EnumerableExtensions
  commentId: T:Toscana.Common.EnumerableExtensions
  parent: Toscana.Common
  isExternal: false
  name: EnumerableExtensions
  nameWithType: EnumerableExtensions
  fullName: Toscana.Common.EnumerableExtensions
- uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
  commentId: M:Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
  isExternal: true
  name: FromHierarchy<TSource>(TSource, Func<TSource, TSource>)
  nameWithType: EnumerableExtensions.FromHierarchy<TSource>(TSource, Func<TSource, TSource>)
  fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<TSource>(TSource, System.Func<TSource, TSource>)
  nameWithType.vb: EnumerableExtensions.FromHierarchy(Of TSource)(TSource, Func(Of TSource, TSource))
  fullname.vb: Toscana.Common.EnumerableExtensions.FromHierarchy(Of TSource)(TSource, System.Func(Of TSource, TSource))
  name.vb: FromHierarchy(Of TSource)(TSource, Func(Of TSource, TSource))
  spec.csharp:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
    name: FromHierarchy<TSource>
    nameWithType: EnumerableExtensions.FromHierarchy<TSource>
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
    name: FromHierarchy(Of TSource)
    nameWithType: EnumerableExtensions.FromHierarchy(Of TSource)
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Toscana.Common
  commentId: N:Toscana.Common
  isExternal: false
  name: Toscana.Common
  nameWithType: Toscana.Common
  fullName: Toscana.Common
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.Dictionary{System.String,Toscana.ToscaPropertyDefinition}
  commentId: T:System.Collections.Generic.Dictionary{System.String,Toscana.ToscaPropertyDefinition}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, ToscaPropertyDefinition>
  nameWithType: Dictionary<String, ToscaPropertyDefinition>
  fullName: System.Collections.Generic.Dictionary<System.String, Toscana.ToscaPropertyDefinition>
  nameWithType.vb: Dictionary(Of String, ToscaPropertyDefinition)
  fullname.vb: System.Collections.Generic.Dictionary(Of System.String, Toscana.ToscaPropertyDefinition)
  name.vb: Dictionary(Of String, ToscaPropertyDefinition)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Toscana.ToscaPropertyDefinition
    name: ToscaPropertyDefinition
    nameWithType: ToscaPropertyDefinition
    fullName: Toscana.ToscaPropertyDefinition
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Toscana.ToscaPropertyDefinition
    name: ToscaPropertyDefinition
    nameWithType: ToscaPropertyDefinition
    fullName: Toscana.ToscaPropertyDefinition
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.Dictionary{System.String,Toscana.ToscaAttributeDefinition}
  commentId: T:System.Collections.Generic.Dictionary{System.String,Toscana.ToscaAttributeDefinition}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, ToscaAttributeDefinition>
  nameWithType: Dictionary<String, ToscaAttributeDefinition>
  fullName: System.Collections.Generic.Dictionary<System.String, Toscana.ToscaAttributeDefinition>
  nameWithType.vb: Dictionary(Of String, ToscaAttributeDefinition)
  fullname.vb: System.Collections.Generic.Dictionary(Of System.String, Toscana.ToscaAttributeDefinition)
  name.vb: Dictionary(Of String, ToscaAttributeDefinition)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Toscana.ToscaAttributeDefinition
    name: ToscaAttributeDefinition
    nameWithType: ToscaAttributeDefinition
    fullName: Toscana.ToscaAttributeDefinition
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Toscana.ToscaAttributeDefinition
    name: ToscaAttributeDefinition
    nameWithType: ToscaAttributeDefinition
    fullName: Toscana.ToscaAttributeDefinition
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Toscana.Exceptions.ToscaCapabilityTypeNotFoundException
  commentId: T:Toscana.Exceptions.ToscaCapabilityTypeNotFoundException
  isExternal: false
  name: ToscaCapabilityTypeNotFoundException
  nameWithType: ToscaCapabilityTypeNotFoundException
  fullName: Toscana.Exceptions.ToscaCapabilityTypeNotFoundException
- uid: Toscana.ToscaCapabilityType
  commentId: T:Toscana.ToscaCapabilityType
  parent: Toscana
  isExternal: false
  name: ToscaCapabilityType
  nameWithType: ToscaCapabilityType
  fullName: Toscana.ToscaCapabilityType
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Toscana.ToscaObject.SetDerivedFromToRoot(System.String)
  commentId: M:Toscana.ToscaObject.SetDerivedFromToRoot(System.String)
  parent: Toscana.ToscaObject
  isExternal: true
  name: SetDerivedFromToRoot(String)
  nameWithType: ToscaObject.SetDerivedFromToRoot(String)
  fullName: Toscana.ToscaObject.SetDerivedFromToRoot(System.String)
  spec.csharp:
  - uid: Toscana.ToscaObject.SetDerivedFromToRoot(System.String)
    name: SetDerivedFromToRoot
    nameWithType: ToscaObject.SetDerivedFromToRoot
    fullName: Toscana.ToscaObject.SetDerivedFromToRoot
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.ToscaObject.SetDerivedFromToRoot(System.String)
    name: SetDerivedFromToRoot
    nameWithType: ToscaObject.SetDerivedFromToRoot
    fullName: Toscana.ToscaObject.SetDerivedFromToRoot
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
