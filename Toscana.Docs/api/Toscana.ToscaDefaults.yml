### YamlMime:ManagedReference
items:
- uid: Toscana.ToscaDefaults
  commentId: T:Toscana.ToscaDefaults
  id: ToscaDefaults
  parent: Toscana
  children:
  - Toscana.ToscaDefaults.GetNodeCapabilityType
  - Toscana.ToscaDefaults.GetRootCapabilityType
  - Toscana.ToscaDefaults.GetRootDataType
  - Toscana.ToscaDefaults.GetRootNodeType
  - Toscana.ToscaDefaults.ToscaArtifactRoot
  - Toscana.ToscaDefaults.ToscaCapabilitiesNode
  - Toscana.ToscaDefaults.ToscaCapabilitiesRoot
  - Toscana.ToscaDefaults.ToscaDataTypeRoot
  - Toscana.ToscaDefaults.ToscaNodesRoot
  - Toscana.ToscaDefaults.ToscaRelationshipTypeRoot
  langs:
  - csharp
  - vb
  name: ToscaDefaults
  nameWithType: ToscaDefaults
  fullName: Toscana.ToscaDefaults
  type: Class
  source:
    remote:
      path: Toscana/ToscaDefaults.cs
      branch: master
      repo: https://github.com/QualiSystems/Toscana.git
    id: ToscaDefaults
    path: Toscana/ToscaDefaults.cs
    startLine: 7
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nTOSCA built-in node types\n"
  example: []
  syntax:
    content: public static class ToscaDefaults
    content.vb: Public Module ToscaDefaults
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Toscana.ToscaDefaults.ToscaRelationshipTypeRoot
  commentId: F:Toscana.ToscaDefaults.ToscaRelationshipTypeRoot
  id: ToscaRelationshipTypeRoot
  parent: Toscana.ToscaDefaults
  langs:
  - csharp
  - vb
  name: ToscaRelationshipTypeRoot
  nameWithType: ToscaDefaults.ToscaRelationshipTypeRoot
  fullName: Toscana.ToscaDefaults.ToscaRelationshipTypeRoot
  type: Field
  source:
    remote:
      path: Toscana/ToscaDefaults.cs
      branch: master
      repo: https://github.com/QualiSystems/Toscana.git
    id: ToscaRelationshipTypeRoot
    path: Toscana/ToscaDefaults.cs
    startLine: 12
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nName of the tosca.relationships.Root\n"
  example: []
  syntax:
    content: public const string ToscaRelationshipTypeRoot = "tosca.relationships.Root"
    content.vb: Public Const ToscaRelationshipTypeRoot As String = "tosca.relationships.Root"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Toscana.ToscaDefaults.ToscaNodesRoot
  commentId: F:Toscana.ToscaDefaults.ToscaNodesRoot
  id: ToscaNodesRoot
  parent: Toscana.ToscaDefaults
  langs:
  - csharp
  - vb
  name: ToscaNodesRoot
  nameWithType: ToscaDefaults.ToscaNodesRoot
  fullName: Toscana.ToscaDefaults.ToscaNodesRoot
  type: Field
  source:
    remote:
      path: Toscana/ToscaDefaults.cs
      branch: master
      repo: https://github.com/QualiSystems/Toscana.git
    id: ToscaNodesRoot
    path: Toscana/ToscaDefaults.cs
    startLine: 17
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nName of the tosca.nodes.Root node type\n"
  example: []
  syntax:
    content: public const string ToscaNodesRoot = "tosca.nodes.Root"
    content.vb: Public Const ToscaNodesRoot As String = "tosca.nodes.Root"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Toscana.ToscaDefaults.ToscaCapabilitiesRoot
  commentId: F:Toscana.ToscaDefaults.ToscaCapabilitiesRoot
  id: ToscaCapabilitiesRoot
  parent: Toscana.ToscaDefaults
  langs:
  - csharp
  - vb
  name: ToscaCapabilitiesRoot
  nameWithType: ToscaDefaults.ToscaCapabilitiesRoot
  fullName: Toscana.ToscaDefaults.ToscaCapabilitiesRoot
  type: Field
  source:
    remote:
      path: Toscana/ToscaDefaults.cs
      branch: master
      repo: https://github.com/QualiSystems/Toscana.git
    id: ToscaCapabilitiesRoot
    path: Toscana/ToscaDefaults.cs
    startLine: 22
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nName of the tosca.capabilities.Root capability type\n"
  example: []
  syntax:
    content: public const string ToscaCapabilitiesRoot = "tosca.capabilities.Root"
    content.vb: Public Const ToscaCapabilitiesRoot As String = "tosca.capabilities.Root"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Toscana.ToscaDefaults.ToscaArtifactRoot
  commentId: F:Toscana.ToscaDefaults.ToscaArtifactRoot
  id: ToscaArtifactRoot
  parent: Toscana.ToscaDefaults
  langs:
  - csharp
  - vb
  name: ToscaArtifactRoot
  nameWithType: ToscaDefaults.ToscaArtifactRoot
  fullName: Toscana.ToscaDefaults.ToscaArtifactRoot
  type: Field
  source:
    remote:
      path: Toscana/ToscaDefaults.cs
      branch: master
      repo: https://github.com/QualiSystems/Toscana.git
    id: ToscaArtifactRoot
    path: Toscana/ToscaDefaults.cs
    startLine: 27
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nName of the tosca.artifact.Root\n"
  example: []
  syntax:
    content: public const string ToscaArtifactRoot = "tosca.artifact.Root"
    content.vb: Public Const ToscaArtifactRoot As String = "tosca.artifact.Root"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Toscana.ToscaDefaults.ToscaCapabilitiesNode
  commentId: F:Toscana.ToscaDefaults.ToscaCapabilitiesNode
  id: ToscaCapabilitiesNode
  parent: Toscana.ToscaDefaults
  langs:
  - csharp
  - vb
  name: ToscaCapabilitiesNode
  nameWithType: ToscaDefaults.ToscaCapabilitiesNode
  fullName: Toscana.ToscaDefaults.ToscaCapabilitiesNode
  type: Field
  source:
    remote:
      path: Toscana/ToscaDefaults.cs
      branch: master
      repo: https://github.com/QualiSystems/Toscana.git
    id: ToscaCapabilitiesNode
    path: Toscana/ToscaDefaults.cs
    startLine: 32
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nName of the root capability\n"
  example: []
  syntax:
    content: public const string ToscaCapabilitiesNode = "tosca.capabilities.Node"
    content.vb: Public Const ToscaCapabilitiesNode As String = "tosca.capabilities.Node"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Toscana.ToscaDefaults.ToscaDataTypeRoot
  commentId: F:Toscana.ToscaDefaults.ToscaDataTypeRoot
  id: ToscaDataTypeRoot
  parent: Toscana.ToscaDefaults
  langs:
  - csharp
  - vb
  name: ToscaDataTypeRoot
  nameWithType: ToscaDefaults.ToscaDataTypeRoot
  fullName: Toscana.ToscaDefaults.ToscaDataTypeRoot
  type: Field
  source:
    remote:
      path: Toscana/ToscaDefaults.cs
      branch: master
      repo: https://github.com/QualiSystems/Toscana.git
    id: ToscaDataTypeRoot
    path: Toscana/ToscaDefaults.cs
    startLine: 37
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nName of the root data type\n"
  example: []
  syntax:
    content: public static string ToscaDataTypeRoot
    content.vb: Public Shared ToscaDataTypeRoot As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Toscana.ToscaDefaults.GetRootNodeType
  commentId: M:Toscana.ToscaDefaults.GetRootNodeType
  id: GetRootNodeType
  parent: Toscana.ToscaDefaults
  langs:
  - csharp
  - vb
  name: GetRootNodeType()
  nameWithType: ToscaDefaults.GetRootNodeType()
  fullName: Toscana.ToscaDefaults.GetRootNodeType()
  type: Method
  source:
    remote:
      path: Toscana/ToscaDefaults.cs
      branch: master
      repo: https://github.com/QualiSystems/Toscana.git
    id: GetRootNodeType
    path: Toscana/ToscaDefaults.cs
    startLine: 44
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nReturns an instance of ToscaNodeType, \nwhich represents Node Type all other TOSCA base Node Types derive from\n"
  example: []
  syntax:
    content: public static ToscaNodeType GetRootNodeType()
    content.vb: Public Shared Function GetRootNodeType As ToscaNodeType
    return:
      type: Toscana.ToscaNodeType
      description: The TOSCA Node Type all other TOSCA base Node Types derive from
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Toscana.ToscaDefaults.GetRootCapabilityType
  commentId: M:Toscana.ToscaDefaults.GetRootCapabilityType
  id: GetRootCapabilityType
  parent: Toscana.ToscaDefaults
  langs:
  - csharp
  - vb
  name: GetRootCapabilityType()
  nameWithType: ToscaDefaults.GetRootCapabilityType()
  fullName: Toscana.ToscaDefaults.GetRootCapabilityType()
  type: Method
  source:
    remote:
      path: Toscana/ToscaDefaults.cs
      branch: master
      repo: https://github.com/QualiSystems/Toscana.git
    id: GetRootCapabilityType
    path: Toscana/ToscaDefaults.cs
    startLine: 75
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nReturns an instance of the tosca.capabilities.Root\n"
  example: []
  syntax:
    content: public static ToscaCapabilityType GetRootCapabilityType()
    content.vb: Public Shared Function GetRootCapabilityType As ToscaCapabilityType
    return:
      type: Toscana.ToscaCapabilityType
      description: ''
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Toscana.ToscaDefaults.GetNodeCapabilityType
  commentId: M:Toscana.ToscaDefaults.GetNodeCapabilityType
  id: GetNodeCapabilityType
  parent: Toscana.ToscaDefaults
  langs:
  - csharp
  - vb
  name: GetNodeCapabilityType()
  nameWithType: ToscaDefaults.GetNodeCapabilityType()
  fullName: Toscana.ToscaDefaults.GetNodeCapabilityType()
  type: Method
  source:
    remote:
      path: Toscana/ToscaDefaults.cs
      branch: master
      repo: https://github.com/QualiSystems/Toscana.git
    id: GetNodeCapabilityType
    path: Toscana/ToscaDefaults.cs
    startLine: 84
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nReturns an instance of tosca.capabilities.Node\n"
  example: []
  syntax:
    content: public static ToscaCapabilityType GetNodeCapabilityType()
    content.vb: Public Shared Function GetNodeCapabilityType As ToscaCapabilityType
    return:
      type: Toscana.ToscaCapabilityType
      description: ''
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Toscana.ToscaDefaults.GetRootDataType
  commentId: M:Toscana.ToscaDefaults.GetRootDataType
  id: GetRootDataType
  parent: Toscana.ToscaDefaults
  langs:
  - csharp
  - vb
  name: GetRootDataType()
  nameWithType: ToscaDefaults.GetRootDataType()
  fullName: Toscana.ToscaDefaults.GetRootDataType()
  type: Method
  source:
    remote:
      path: Toscana/ToscaDefaults.cs
      branch: master
      repo: https://github.com/QualiSystems/Toscana.git
    id: GetRootDataType
    path: Toscana/ToscaDefaults.cs
    startLine: 96
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nReturns an instance of the tosca.datatypes.Root\n"
  example: []
  syntax:
    content: public static ToscaDataType GetRootDataType()
    content.vb: Public Shared Function GetRootDataType As ToscaDataType
    return:
      type: Toscana.ToscaDataType
      description: ''
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Toscana
  commentId: N:Toscana
  isExternal: false
  name: Toscana
  nameWithType: Toscana
  fullName: Toscana
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Toscana.ToscaNodeType
  commentId: T:Toscana.ToscaNodeType
  parent: Toscana
  isExternal: false
  name: ToscaNodeType
  nameWithType: ToscaNodeType
  fullName: Toscana.ToscaNodeType
- uid: Toscana.ToscaCapabilityType
  commentId: T:Toscana.ToscaCapabilityType
  parent: Toscana
  isExternal: false
  name: ToscaCapabilityType
  nameWithType: ToscaCapabilityType
  fullName: Toscana.ToscaCapabilityType
- uid: Toscana.ToscaDataType
  commentId: T:Toscana.ToscaDataType
  parent: Toscana
  isExternal: false
  name: ToscaDataType
  nameWithType: ToscaDataType
  fullName: Toscana.ToscaDataType
