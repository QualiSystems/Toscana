### YamlMime:ManagedReference
items:
- uid: Toscana.ToscaRequirementAssignment
  commentId: T:Toscana.ToscaRequirementAssignment
  id: ToscaRequirementAssignment
  parent: Toscana
  children:
  - Toscana.ToscaRequirementAssignment.Capability
  - Toscana.ToscaRequirementAssignment.Node
  - Toscana.ToscaRequirementAssignment.NodeFilter
  - Toscana.ToscaRequirementAssignment.op_Implicit(System.String)~Toscana.ToscaRequirementAssignment
  - Toscana.ToscaRequirementAssignment.Relationship
  langs:
  - csharp
  - vb
  name: ToscaRequirementAssignment
  nameWithType: ToscaRequirementAssignment
  fullName: Toscana.ToscaRequirementAssignment
  type: Class
  source:
    remote:
      path: Toscana/ToscaRequirementAssignment.cs
      branch: develop
      repo: https://github.com/QualiSystems/Toscana.git
    id: ToscaRequirementAssignment
    path: Toscana/ToscaRequirementAssignment.cs
    startLine: 7
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nA Requirement assignment allows template authors to provide either concrete names of TOSCA templates \nor provide abstract selection criteria for providers to use to find matching TOSCA templates \nthat are used to fulfill a named requirementâ€™s declared TOSCA Node Type.\n"
  example: []
  syntax:
    content: public class ToscaRequirementAssignment
    content.vb: Public Class ToscaRequirementAssignment
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Toscana.ToscaRequirementAssignment.Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{Toscana.ToscaRequirementAssignment,Toscana.ToscaRequirementAssignment},System.Func{Toscana.ToscaRequirementAssignment,System.Boolean})
  - Toscana.ToscaRequirementAssignment.Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{Toscana.ToscaRequirementAssignment,Toscana.ToscaRequirementAssignment})
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Toscana.ToscaRequirementAssignment.Capability
  commentId: P:Toscana.ToscaRequirementAssignment.Capability
  id: Capability
  parent: Toscana.ToscaRequirementAssignment
  langs:
  - csharp
  - vb
  name: Capability
  nameWithType: ToscaRequirementAssignment.Capability
  fullName: Toscana.ToscaRequirementAssignment.Capability
  type: Property
  source:
    remote:
      path: Toscana/ToscaRequirementAssignment.cs
      branch: develop
      repo: https://github.com/QualiSystems/Toscana.git
    id: Capability
    path: Toscana/ToscaRequirementAssignment.cs
    startLine: 15
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nThe optional reserved keyname used to provide the name of either a: \n* Capability definition within a target node template that can fulfill the requirement.\n* Capability Type that the provider will use to select a type-compatible target node template \nto fulfill the requirement at runtime.\n"
  example: []
  syntax:
    content: public string Capability { get; set; }
    content.vb: Public Property Capability As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Toscana.ToscaRequirementAssignment.Node
  commentId: P:Toscana.ToscaRequirementAssignment.Node
  id: Node
  parent: Toscana.ToscaRequirementAssignment
  langs:
  - csharp
  - vb
  name: Node
  nameWithType: ToscaRequirementAssignment.Node
  fullName: Toscana.ToscaRequirementAssignment.Node
  type: Property
  source:
    remote:
      path: Toscana/ToscaRequirementAssignment.cs
      branch: develop
      repo: https://github.com/QualiSystems/Toscana.git
    id: Node
    path: Toscana/ToscaRequirementAssignment.cs
    startLine: 22
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nThe optional reserved keyname used to identify the target node of a relationship.specifically, it is used to provide either a: \n* Node Template name that can fulfill the target node requirement. \n* Node Type name that the provider will use to select a type-compatible node template to fulfill the requirement at runtime.\n"
  example: []
  syntax:
    content: public string Node { get; set; }
    content.vb: Public Property Node As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Toscana.ToscaRequirementAssignment.Relationship
  commentId: P:Toscana.ToscaRequirementAssignment.Relationship
  id: Relationship
  parent: Toscana.ToscaRequirementAssignment
  langs:
  - csharp
  - vb
  name: Relationship
  nameWithType: ToscaRequirementAssignment.Relationship
  fullName: Toscana.ToscaRequirementAssignment.Relationship
  type: Property
  source:
    remote:
      path: Toscana/ToscaRequirementAssignment.cs
      branch: develop
      repo: https://github.com/QualiSystems/Toscana.git
    id: Relationship
    path: Toscana/ToscaRequirementAssignment.cs
    startLine: 30
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nThe optional reserved keyname used to provide the name of either a: \n* Relationship Template to use to relate the source node to the(capability in the) target node when fulfilling the requirement. \n* Relationship Type that the provider will use to select a type-compatible relationship template to relate the source node to the target node at runtime.\n"
  example: []
  syntax:
    content: public string Relationship { get; set; }
    content.vb: Public Property Relationship As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Toscana.ToscaRequirementAssignment.NodeFilter
  commentId: P:Toscana.ToscaRequirementAssignment.NodeFilter
  id: NodeFilter
  parent: Toscana.ToscaRequirementAssignment
  langs:
  - csharp
  - vb
  name: NodeFilter
  nameWithType: ToscaRequirementAssignment.NodeFilter
  fullName: Toscana.ToscaRequirementAssignment.NodeFilter
  type: Property
  source:
    remote:
      path: Toscana/ToscaRequirementAssignment.cs
      branch: develop
      repo: https://github.com/QualiSystems/Toscana.git
    id: NodeFilter
    path: Toscana/ToscaRequirementAssignment.cs
    startLine: 36
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nThe optional filter definition that TOSCA orchestrators or providers would use to select \na type-compatible target node that can fulfill the associated abstract requirement at runtime.\n"
  example: []
  syntax:
    content: public string NodeFilter { get; set; }
    content.vb: Public Property NodeFilter As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Toscana.ToscaRequirementAssignment.op_Implicit(System.String)~Toscana.ToscaRequirementAssignment
  commentId: M:Toscana.ToscaRequirementAssignment.op_Implicit(System.String)~Toscana.ToscaRequirementAssignment
  id: op_Implicit(System.String)~Toscana.ToscaRequirementAssignment
  parent: Toscana.ToscaRequirementAssignment
  langs:
  - csharp
  - vb
  name: Implicit(String to ToscaRequirementAssignment)
  nameWithType: ToscaRequirementAssignment.Implicit(String to ToscaRequirementAssignment)
  fullName: Toscana.ToscaRequirementAssignment.Implicit(System.String to Toscana.ToscaRequirementAssignment)
  type: Operator
  source:
    remote:
      path: Toscana/ToscaRequirementAssignment.cs
      branch: develop
      repo: https://github.com/QualiSystems/Toscana.git
    id: op_Implicit
    path: Toscana/ToscaRequirementAssignment.cs
    startLine: 43
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nInitializes an instance of <xref href=\"Toscana.ToscaRequirementAssignment\" data-throw-if-not-resolved=\"false\"></xref> and set Node property\n"
  example: []
  syntax:
    content: public static implicit operator ToscaRequirementAssignment(string node)
    content.vb: Public Shared Widening Operator CType(node As String) As ToscaRequirementAssignment
    parameters:
    - id: node
      type: System.String
      description: Node value to set
    return:
      type: Toscana.ToscaRequirementAssignment
      description: An instance of <xref href="Toscana.ToscaRequirementAssignment" data-throw-if-not-resolved="false"></xref>
  nameWithType.vb: ToscaRequirementAssignment.Widening(String to ToscaRequirementAssignment)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Toscana.ToscaRequirementAssignment.Widening(System.String to Toscana.ToscaRequirementAssignment)
  name.vb: Widening(String to ToscaRequirementAssignment)
references:
- uid: Toscana
  commentId: N:Toscana
  isExternal: false
  name: Toscana
  nameWithType: Toscana
  fullName: Toscana
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Toscana.ToscaRequirementAssignment.Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{Toscana.ToscaRequirementAssignment,Toscana.ToscaRequirementAssignment},System.Func{Toscana.ToscaRequirementAssignment,System.Boolean})
  commentId: M:Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
  parent: Toscana.Common.EnumerableExtensions
  definition: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
  name: FromHierarchy<ToscaRequirementAssignment>(Func<ToscaRequirementAssignment, ToscaRequirementAssignment>, Func<ToscaRequirementAssignment, Boolean>)
  nameWithType: EnumerableExtensions.FromHierarchy<ToscaRequirementAssignment>(Func<ToscaRequirementAssignment, ToscaRequirementAssignment>, Func<ToscaRequirementAssignment, Boolean>)
  fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<Toscana.ToscaRequirementAssignment>(System.Func<Toscana.ToscaRequirementAssignment, Toscana.ToscaRequirementAssignment>, System.Func<Toscana.ToscaRequirementAssignment, System.Boolean>)
  nameWithType.vb: EnumerableExtensions.FromHierarchy(Of ToscaRequirementAssignment)(Func(Of ToscaRequirementAssignment, ToscaRequirementAssignment), Func(Of ToscaRequirementAssignment, Boolean))
  fullname.vb: Toscana.Common.EnumerableExtensions.FromHierarchy(Of Toscana.ToscaRequirementAssignment)(System.Func(Of Toscana.ToscaRequirementAssignment, Toscana.ToscaRequirementAssignment), System.Func(Of Toscana.ToscaRequirementAssignment, System.Boolean))
  name.vb: FromHierarchy(Of ToscaRequirementAssignment)(Func(Of ToscaRequirementAssignment, ToscaRequirementAssignment), Func(Of ToscaRequirementAssignment, Boolean))
  spec.csharp:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{``0,``0},System.Func{``0,System.Boolean})
    name: FromHierarchy<ToscaRequirementAssignment>
    nameWithType: EnumerableExtensions.FromHierarchy<ToscaRequirementAssignment>
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<Toscana.ToscaRequirementAssignment>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Toscana.ToscaRequirementAssignment
    name: ToscaRequirementAssignment
    nameWithType: ToscaRequirementAssignment
    fullName: Toscana.ToscaRequirementAssignment
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Toscana.ToscaRequirementAssignment
    name: ToscaRequirementAssignment
    nameWithType: ToscaRequirementAssignment
    fullName: Toscana.ToscaRequirementAssignment
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Toscana.ToscaRequirementAssignment
    name: ToscaRequirementAssignment
    nameWithType: ToscaRequirementAssignment
    fullName: Toscana.ToscaRequirementAssignment
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{``0,``0},System.Func{``0,System.Boolean})
    name: FromHierarchy(Of ToscaRequirementAssignment)
    nameWithType: EnumerableExtensions.FromHierarchy(Of ToscaRequirementAssignment)
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy(Of Toscana.ToscaRequirementAssignment)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Toscana.ToscaRequirementAssignment
    name: ToscaRequirementAssignment
    nameWithType: ToscaRequirementAssignment
    fullName: Toscana.ToscaRequirementAssignment
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Toscana.ToscaRequirementAssignment
    name: ToscaRequirementAssignment
    nameWithType: ToscaRequirementAssignment
    fullName: Toscana.ToscaRequirementAssignment
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Toscana.ToscaRequirementAssignment
    name: ToscaRequirementAssignment
    nameWithType: ToscaRequirementAssignment
    fullName: Toscana.ToscaRequirementAssignment
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Toscana.ToscaRequirementAssignment.Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{Toscana.ToscaRequirementAssignment,Toscana.ToscaRequirementAssignment})
  commentId: M:Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
  parent: Toscana.Common.EnumerableExtensions
  definition: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
  name: FromHierarchy<ToscaRequirementAssignment>(Func<ToscaRequirementAssignment, ToscaRequirementAssignment>)
  nameWithType: EnumerableExtensions.FromHierarchy<ToscaRequirementAssignment>(Func<ToscaRequirementAssignment, ToscaRequirementAssignment>)
  fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<Toscana.ToscaRequirementAssignment>(System.Func<Toscana.ToscaRequirementAssignment, Toscana.ToscaRequirementAssignment>)
  nameWithType.vb: EnumerableExtensions.FromHierarchy(Of ToscaRequirementAssignment)(Func(Of ToscaRequirementAssignment, ToscaRequirementAssignment))
  fullname.vb: Toscana.Common.EnumerableExtensions.FromHierarchy(Of Toscana.ToscaRequirementAssignment)(System.Func(Of Toscana.ToscaRequirementAssignment, Toscana.ToscaRequirementAssignment))
  name.vb: FromHierarchy(Of ToscaRequirementAssignment)(Func(Of ToscaRequirementAssignment, ToscaRequirementAssignment))
  spec.csharp:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{``0,``0})
    name: FromHierarchy<ToscaRequirementAssignment>
    nameWithType: EnumerableExtensions.FromHierarchy<ToscaRequirementAssignment>
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<Toscana.ToscaRequirementAssignment>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Toscana.ToscaRequirementAssignment
    name: ToscaRequirementAssignment
    nameWithType: ToscaRequirementAssignment
    fullName: Toscana.ToscaRequirementAssignment
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Toscana.ToscaRequirementAssignment
    name: ToscaRequirementAssignment
    nameWithType: ToscaRequirementAssignment
    fullName: Toscana.ToscaRequirementAssignment
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{``0,``0})
    name: FromHierarchy(Of ToscaRequirementAssignment)
    nameWithType: EnumerableExtensions.FromHierarchy(Of ToscaRequirementAssignment)
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy(Of Toscana.ToscaRequirementAssignment)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Toscana.ToscaRequirementAssignment
    name: ToscaRequirementAssignment
    nameWithType: ToscaRequirementAssignment
    fullName: Toscana.ToscaRequirementAssignment
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Toscana.ToscaRequirementAssignment
    name: ToscaRequirementAssignment
    nameWithType: ToscaRequirementAssignment
    fullName: Toscana.ToscaRequirementAssignment
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
  commentId: M:Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: FromHierarchy<TSource>(TSource, Func<TSource, TSource>, Func<TSource, Boolean>)
  nameWithType: EnumerableExtensions.FromHierarchy<TSource>(TSource, Func<TSource, TSource>, Func<TSource, Boolean>)
  fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<TSource>(TSource, System.Func<TSource, TSource>, System.Func<TSource, System.Boolean>)
  nameWithType.vb: EnumerableExtensions.FromHierarchy(Of TSource)(TSource, Func(Of TSource, TSource), Func(Of TSource, Boolean))
  fullname.vb: Toscana.Common.EnumerableExtensions.FromHierarchy(Of TSource)(TSource, System.Func(Of TSource, TSource), System.Func(Of TSource, System.Boolean))
  name.vb: FromHierarchy(Of TSource)(TSource, Func(Of TSource, TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
    name: FromHierarchy<TSource>
    nameWithType: EnumerableExtensions.FromHierarchy<TSource>
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
    name: FromHierarchy(Of TSource)
    nameWithType: EnumerableExtensions.FromHierarchy(Of TSource)
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Toscana.Common.EnumerableExtensions
  commentId: T:Toscana.Common.EnumerableExtensions
  parent: Toscana.Common
  isExternal: false
  name: EnumerableExtensions
  nameWithType: EnumerableExtensions
  fullName: Toscana.Common.EnumerableExtensions
- uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
  commentId: M:Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
  isExternal: true
  name: FromHierarchy<TSource>(TSource, Func<TSource, TSource>)
  nameWithType: EnumerableExtensions.FromHierarchy<TSource>(TSource, Func<TSource, TSource>)
  fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<TSource>(TSource, System.Func<TSource, TSource>)
  nameWithType.vb: EnumerableExtensions.FromHierarchy(Of TSource)(TSource, Func(Of TSource, TSource))
  fullname.vb: Toscana.Common.EnumerableExtensions.FromHierarchy(Of TSource)(TSource, System.Func(Of TSource, TSource))
  name.vb: FromHierarchy(Of TSource)(TSource, Func(Of TSource, TSource))
  spec.csharp:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
    name: FromHierarchy<TSource>
    nameWithType: EnumerableExtensions.FromHierarchy<TSource>
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
    name: FromHierarchy(Of TSource)
    nameWithType: EnumerableExtensions.FromHierarchy(Of TSource)
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Toscana.Common
  commentId: N:Toscana.Common
  isExternal: false
  name: Toscana.Common
  nameWithType: Toscana.Common
  fullName: Toscana.Common
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Toscana.ToscaRequirementAssignment
  commentId: T:Toscana.ToscaRequirementAssignment
  parent: Toscana
  isExternal: false
  name: ToscaRequirementAssignment
  nameWithType: ToscaRequirementAssignment
  fullName: Toscana.ToscaRequirementAssignment
