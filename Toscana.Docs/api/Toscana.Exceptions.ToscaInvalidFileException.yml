### YamlMime:ManagedReference
items:
- uid: Toscana.Exceptions.ToscaInvalidFileException
  commentId: T:Toscana.Exceptions.ToscaInvalidFileException
  id: ToscaInvalidFileException
  parent: Toscana.Exceptions
  children:
  - Toscana.Exceptions.ToscaInvalidFileException.#ctor
  - Toscana.Exceptions.ToscaInvalidFileException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - Toscana.Exceptions.ToscaInvalidFileException.#ctor(System.String)
  - Toscana.Exceptions.ToscaInvalidFileException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  - vb
  name: ToscaInvalidFileException
  nameWithType: ToscaInvalidFileException
  fullName: Toscana.Exceptions.ToscaInvalidFileException
  type: Class
  source:
    remote:
      path: Toscana/Exceptions/ToscaInvalidFileException.cs
      branch: master
      repo: https://github.com/QualiSystems/Toscana.git
    id: ToscaInvalidFileException
    path: Toscana/Exceptions/ToscaInvalidFileException.cs
    startLine: 8
  assemblies:
  - Toscana
  namespace: Toscana.Exceptions
  summary: "\nThrown when a file to load is not valid (not a zip file)\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public class ToscaInvalidFileException : ToscaBaseException, ISerializable, _Exception
    content.vb: >-
      <Serializable>

      Public Class ToscaInvalidFileException
          Inherits ToscaBaseException
          Implements ISerializable, _Exception
  inheritance:
  - System.Object
  - System.Exception
  - Toscana.Exceptions.ToscaBaseException
  implements:
  - System.Runtime.Serialization.ISerializable
  - System.Runtime.InteropServices._Exception
  inheritedMembers:
  - System.Exception.GetBaseException
  - System.Exception.ToString
  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Exception.GetType
  - System.Exception.Message
  - System.Exception.Data
  - System.Exception.InnerException
  - System.Exception.TargetSite
  - System.Exception.StackTrace
  - System.Exception.HelpLink
  - System.Exception.Source
  - System.Exception.HResult
  - System.Exception.SerializeObjectState
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  extensionMethods:
  - Toscana.Exceptions.ToscaInvalidFileException.Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{Toscana.Exceptions.ToscaInvalidFileException,Toscana.Exceptions.ToscaInvalidFileException},System.Func{Toscana.Exceptions.ToscaInvalidFileException,System.Boolean})
  - Toscana.Exceptions.ToscaInvalidFileException.Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{Toscana.Exceptions.ToscaInvalidFileException,Toscana.Exceptions.ToscaInvalidFileException})
  - System.Exception.Toscana.Common.ExceptionExtensions.GetaAllMessages
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Toscana.Exceptions.ToscaInvalidFileException.#ctor
  commentId: M:Toscana.Exceptions.ToscaInvalidFileException.#ctor
  id: '#ctor'
  parent: Toscana.Exceptions.ToscaInvalidFileException
  langs:
  - csharp
  - vb
  name: ToscaInvalidFileException()
  nameWithType: ToscaInvalidFileException.ToscaInvalidFileException()
  fullName: Toscana.Exceptions.ToscaInvalidFileException.ToscaInvalidFileException()
  type: Constructor
  source:
    remote:
      path: Toscana/Exceptions/ToscaInvalidFileException.cs
      branch: master
      repo: https://github.com/QualiSystems/Toscana.git
    id: .ctor
    path: Toscana/Exceptions/ToscaInvalidFileException.cs
    startLine: 14
  assemblies:
  - Toscana
  namespace: Toscana.Exceptions
  summary: "\nInitializes an exception\n"
  example: []
  syntax:
    content: public ToscaInvalidFileException()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Toscana.Exceptions.ToscaInvalidFileException.#ctor(System.String)
  commentId: M:Toscana.Exceptions.ToscaInvalidFileException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Toscana.Exceptions.ToscaInvalidFileException
  langs:
  - csharp
  - vb
  name: ToscaInvalidFileException(String)
  nameWithType: ToscaInvalidFileException.ToscaInvalidFileException(String)
  fullName: Toscana.Exceptions.ToscaInvalidFileException.ToscaInvalidFileException(System.String)
  type: Constructor
  source:
    remote:
      path: Toscana/Exceptions/ToscaInvalidFileException.cs
      branch: master
      repo: https://github.com/QualiSystems/Toscana.git
    id: .ctor
    path: Toscana/Exceptions/ToscaInvalidFileException.cs
    startLine: 21
  assemblies:
  - Toscana
  namespace: Toscana.Exceptions
  summary: "\n/// Initializes an exception with a message\n"
  example: []
  syntax:
    content: public ToscaInvalidFileException(string message)
    content.vb: Public Sub New(message As String)
    parameters:
    - id: message
      type: System.String
      description: ''
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Toscana.Exceptions.ToscaInvalidFileException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:Toscana.Exceptions.ToscaInvalidFileException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: Toscana.Exceptions.ToscaInvalidFileException
  langs:
  - csharp
  - vb
  name: ToscaInvalidFileException(SerializationInfo, StreamingContext)
  nameWithType: ToscaInvalidFileException.ToscaInvalidFileException(SerializationInfo, StreamingContext)
  fullName: Toscana.Exceptions.ToscaInvalidFileException.ToscaInvalidFileException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  type: Constructor
  source:
    remote:
      path: Toscana/Exceptions/ToscaInvalidFileException.cs
      branch: master
      repo: https://github.com/QualiSystems/Toscana.git
    id: .ctor
    path: Toscana/Exceptions/ToscaInvalidFileException.cs
    startLine: 32
  assemblies:
  - Toscana
  namespace: Toscana.Exceptions
  summary: "\nInitializes an exception from serialization info and streaming context\n"
  example: []
  syntax:
    content: public ToscaInvalidFileException(SerializationInfo info, StreamingContext context)
    content.vb: Public Sub New(info As SerializationInfo, context As StreamingContext)
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: ''
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: ''
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: 'The <em>info</em> parameter is null. '
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: 'The class name is null or <xref href="System.Exception.HResult" data-throw-if-not-resolved="false"></xref> is zero (0). '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Toscana.Exceptions.ToscaInvalidFileException.#ctor(System.String,System.Exception)
  commentId: M:Toscana.Exceptions.ToscaInvalidFileException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: Toscana.Exceptions.ToscaInvalidFileException
  langs:
  - csharp
  - vb
  name: ToscaInvalidFileException(String, Exception)
  nameWithType: ToscaInvalidFileException.ToscaInvalidFileException(String, Exception)
  fullName: Toscana.Exceptions.ToscaInvalidFileException.ToscaInvalidFileException(System.String, System.Exception)
  type: Constructor
  source:
    remote:
      path: Toscana/Exceptions/ToscaInvalidFileException.cs
      branch: master
      repo: https://github.com/QualiSystems/Toscana.git
    id: .ctor
    path: Toscana/Exceptions/ToscaInvalidFileException.cs
    startLine: 41
  assemblies:
  - Toscana
  namespace: Toscana.Exceptions
  summary: "\nInitializes an exception from with a custom message and an inner exception\n"
  example: []
  syntax:
    content: public ToscaInvalidFileException(string message, Exception innerException)
    content.vb: Public Sub New(message As String, innerException As Exception)
    parameters:
    - id: message
      type: System.String
      description: ''
    - id: innerException
      type: System.Exception
      description: The inner exception that occured and is now handled
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Toscana.Exceptions
  commentId: N:Toscana.Exceptions
  isExternal: false
  name: Toscana.Exceptions
  nameWithType: Toscana.Exceptions
  fullName: Toscana.Exceptions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Toscana.Exceptions.ToscaBaseException
  commentId: T:Toscana.Exceptions.ToscaBaseException
  parent: Toscana.Exceptions
  isExternal: false
  name: ToscaBaseException
  nameWithType: ToscaBaseException
  fullName: Toscana.Exceptions.ToscaBaseException
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.Runtime.InteropServices._Exception
  commentId: T:System.Runtime.InteropServices._Exception
  parent: System.Runtime.InteropServices
  isExternal: true
  name: _Exception
  nameWithType: _Exception
  fullName: System.Runtime.InteropServices._Exception
- uid: System.Exception.GetBaseException
  commentId: M:System.Exception.GetBaseException
  parent: System.Exception
  isExternal: true
  name: GetBaseException()
  nameWithType: Exception.GetBaseException()
  fullName: System.Exception.GetBaseException()
  spec.csharp:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    nameWithType: Exception.GetBaseException
    fullName: System.Exception.GetBaseException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    nameWithType: Exception.GetBaseException
    fullName: System.Exception.GetBaseException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.ToString
  commentId: M:System.Exception.ToString
  parent: System.Exception
  isExternal: true
  name: ToString()
  nameWithType: Exception.ToString()
  fullName: System.Exception.ToString()
  spec.csharp:
  - uid: System.Exception.ToString
    name: ToString
    nameWithType: Exception.ToString
    fullName: System.Exception.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.ToString
    name: ToString
    nameWithType: Exception.ToString
    fullName: System.Exception.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Exception
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: Exception.GetObjectData
    fullName: System.Exception.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: Exception.GetObjectData
    fullName: System.Exception.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.GetType
  commentId: M:System.Exception.GetType
  parent: System.Exception
  isExternal: true
  name: GetType()
  nameWithType: Exception.GetType()
  fullName: System.Exception.GetType()
  spec.csharp:
  - uid: System.Exception.GetType
    name: GetType
    nameWithType: Exception.GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetType
    name: GetType
    nameWithType: Exception.GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.Message
  commentId: P:System.Exception.Message
  parent: System.Exception
  isExternal: true
  name: Message
  nameWithType: Exception.Message
  fullName: System.Exception.Message
- uid: System.Exception.Data
  commentId: P:System.Exception.Data
  parent: System.Exception
  isExternal: true
  name: Data
  nameWithType: Exception.Data
  fullName: System.Exception.Data
- uid: System.Exception.InnerException
  commentId: P:System.Exception.InnerException
  parent: System.Exception
  isExternal: true
  name: InnerException
  nameWithType: Exception.InnerException
  fullName: System.Exception.InnerException
- uid: System.Exception.TargetSite
  commentId: P:System.Exception.TargetSite
  parent: System.Exception
  isExternal: true
  name: TargetSite
  nameWithType: Exception.TargetSite
  fullName: System.Exception.TargetSite
- uid: System.Exception.StackTrace
  commentId: P:System.Exception.StackTrace
  parent: System.Exception
  isExternal: true
  name: StackTrace
  nameWithType: Exception.StackTrace
  fullName: System.Exception.StackTrace
- uid: System.Exception.HelpLink
  commentId: P:System.Exception.HelpLink
  parent: System.Exception
  isExternal: true
  name: HelpLink
  nameWithType: Exception.HelpLink
  fullName: System.Exception.HelpLink
- uid: System.Exception.Source
  commentId: P:System.Exception.Source
  parent: System.Exception
  isExternal: true
  name: Source
  nameWithType: Exception.Source
  fullName: System.Exception.Source
- uid: System.Exception.HResult
  commentId: P:System.Exception.HResult
  parent: System.Exception
  isExternal: true
  name: HResult
  nameWithType: Exception.HResult
  fullName: System.Exception.HResult
- uid: System.Exception.SerializeObjectState
  commentId: E:System.Exception.SerializeObjectState
  parent: System.Exception
  isExternal: true
  name: SerializeObjectState
  nameWithType: Exception.SerializeObjectState
  fullName: System.Exception.SerializeObjectState
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Toscana.Exceptions.ToscaInvalidFileException.Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{Toscana.Exceptions.ToscaInvalidFileException,Toscana.Exceptions.ToscaInvalidFileException},System.Func{Toscana.Exceptions.ToscaInvalidFileException,System.Boolean})
  commentId: M:Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
  parent: Toscana.Common.EnumerableExtensions
  definition: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
  name: FromHierarchy<ToscaInvalidFileException>(Func<ToscaInvalidFileException, ToscaInvalidFileException>, Func<ToscaInvalidFileException, Boolean>)
  nameWithType: EnumerableExtensions.FromHierarchy<ToscaInvalidFileException>(Func<ToscaInvalidFileException, ToscaInvalidFileException>, Func<ToscaInvalidFileException, Boolean>)
  fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<Toscana.Exceptions.ToscaInvalidFileException>(System.Func<Toscana.Exceptions.ToscaInvalidFileException, Toscana.Exceptions.ToscaInvalidFileException>, System.Func<Toscana.Exceptions.ToscaInvalidFileException, System.Boolean>)
  nameWithType.vb: EnumerableExtensions.FromHierarchy(Of ToscaInvalidFileException)(Func(Of ToscaInvalidFileException, ToscaInvalidFileException), Func(Of ToscaInvalidFileException, Boolean))
  fullname.vb: Toscana.Common.EnumerableExtensions.FromHierarchy(Of Toscana.Exceptions.ToscaInvalidFileException)(System.Func(Of Toscana.Exceptions.ToscaInvalidFileException, Toscana.Exceptions.ToscaInvalidFileException), System.Func(Of Toscana.Exceptions.ToscaInvalidFileException, System.Boolean))
  name.vb: FromHierarchy(Of ToscaInvalidFileException)(Func(Of ToscaInvalidFileException, ToscaInvalidFileException), Func(Of ToscaInvalidFileException, Boolean))
  spec.csharp:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{``0,``0},System.Func{``0,System.Boolean})
    name: FromHierarchy<ToscaInvalidFileException>
    nameWithType: EnumerableExtensions.FromHierarchy<ToscaInvalidFileException>
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<Toscana.Exceptions.ToscaInvalidFileException>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Toscana.Exceptions.ToscaInvalidFileException
    name: ToscaInvalidFileException
    nameWithType: ToscaInvalidFileException
    fullName: Toscana.Exceptions.ToscaInvalidFileException
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Toscana.Exceptions.ToscaInvalidFileException
    name: ToscaInvalidFileException
    nameWithType: ToscaInvalidFileException
    fullName: Toscana.Exceptions.ToscaInvalidFileException
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Toscana.Exceptions.ToscaInvalidFileException
    name: ToscaInvalidFileException
    nameWithType: ToscaInvalidFileException
    fullName: Toscana.Exceptions.ToscaInvalidFileException
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{``0,``0},System.Func{``0,System.Boolean})
    name: FromHierarchy(Of ToscaInvalidFileException)
    nameWithType: EnumerableExtensions.FromHierarchy(Of ToscaInvalidFileException)
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy(Of Toscana.Exceptions.ToscaInvalidFileException)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Toscana.Exceptions.ToscaInvalidFileException
    name: ToscaInvalidFileException
    nameWithType: ToscaInvalidFileException
    fullName: Toscana.Exceptions.ToscaInvalidFileException
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Toscana.Exceptions.ToscaInvalidFileException
    name: ToscaInvalidFileException
    nameWithType: ToscaInvalidFileException
    fullName: Toscana.Exceptions.ToscaInvalidFileException
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Toscana.Exceptions.ToscaInvalidFileException
    name: ToscaInvalidFileException
    nameWithType: ToscaInvalidFileException
    fullName: Toscana.Exceptions.ToscaInvalidFileException
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Toscana.Exceptions.ToscaInvalidFileException.Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{Toscana.Exceptions.ToscaInvalidFileException,Toscana.Exceptions.ToscaInvalidFileException})
  commentId: M:Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
  parent: Toscana.Common.EnumerableExtensions
  definition: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
  name: FromHierarchy<ToscaInvalidFileException>(Func<ToscaInvalidFileException, ToscaInvalidFileException>)
  nameWithType: EnumerableExtensions.FromHierarchy<ToscaInvalidFileException>(Func<ToscaInvalidFileException, ToscaInvalidFileException>)
  fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<Toscana.Exceptions.ToscaInvalidFileException>(System.Func<Toscana.Exceptions.ToscaInvalidFileException, Toscana.Exceptions.ToscaInvalidFileException>)
  nameWithType.vb: EnumerableExtensions.FromHierarchy(Of ToscaInvalidFileException)(Func(Of ToscaInvalidFileException, ToscaInvalidFileException))
  fullname.vb: Toscana.Common.EnumerableExtensions.FromHierarchy(Of Toscana.Exceptions.ToscaInvalidFileException)(System.Func(Of Toscana.Exceptions.ToscaInvalidFileException, Toscana.Exceptions.ToscaInvalidFileException))
  name.vb: FromHierarchy(Of ToscaInvalidFileException)(Func(Of ToscaInvalidFileException, ToscaInvalidFileException))
  spec.csharp:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{``0,``0})
    name: FromHierarchy<ToscaInvalidFileException>
    nameWithType: EnumerableExtensions.FromHierarchy<ToscaInvalidFileException>
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<Toscana.Exceptions.ToscaInvalidFileException>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Toscana.Exceptions.ToscaInvalidFileException
    name: ToscaInvalidFileException
    nameWithType: ToscaInvalidFileException
    fullName: Toscana.Exceptions.ToscaInvalidFileException
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Toscana.Exceptions.ToscaInvalidFileException
    name: ToscaInvalidFileException
    nameWithType: ToscaInvalidFileException
    fullName: Toscana.Exceptions.ToscaInvalidFileException
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{``0,``0})
    name: FromHierarchy(Of ToscaInvalidFileException)
    nameWithType: EnumerableExtensions.FromHierarchy(Of ToscaInvalidFileException)
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy(Of Toscana.Exceptions.ToscaInvalidFileException)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Toscana.Exceptions.ToscaInvalidFileException
    name: ToscaInvalidFileException
    nameWithType: ToscaInvalidFileException
    fullName: Toscana.Exceptions.ToscaInvalidFileException
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Toscana.Exceptions.ToscaInvalidFileException
    name: ToscaInvalidFileException
    nameWithType: ToscaInvalidFileException
    fullName: Toscana.Exceptions.ToscaInvalidFileException
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.Toscana.Common.ExceptionExtensions.GetaAllMessages
  commentId: M:Toscana.Common.ExceptionExtensions.GetaAllMessages(System.Exception)
  parent: Toscana.Common.ExceptionExtensions
  definition: Toscana.Common.ExceptionExtensions.GetaAllMessages(System.Exception)
  name: GetaAllMessages()
  nameWithType: ExceptionExtensions.GetaAllMessages()
  fullName: Toscana.Common.ExceptionExtensions.GetaAllMessages()
  spec.csharp:
  - uid: Toscana.Common.ExceptionExtensions.GetaAllMessages
    name: GetaAllMessages
    nameWithType: ExceptionExtensions.GetaAllMessages
    fullName: Toscana.Common.ExceptionExtensions.GetaAllMessages
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.Common.ExceptionExtensions.GetaAllMessages
    name: GetaAllMessages
    nameWithType: ExceptionExtensions.GetaAllMessages
    fullName: Toscana.Common.ExceptionExtensions.GetaAllMessages
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: System.Runtime.InteropServices
  commentId: N:System.Runtime.InteropServices
  isExternal: false
  name: System.Runtime.InteropServices
  nameWithType: System.Runtime.InteropServices
  fullName: System.Runtime.InteropServices
- uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
  commentId: M:Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: FromHierarchy<TSource>(TSource, Func<TSource, TSource>, Func<TSource, Boolean>)
  nameWithType: EnumerableExtensions.FromHierarchy<TSource>(TSource, Func<TSource, TSource>, Func<TSource, Boolean>)
  fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<TSource>(TSource, System.Func<TSource, TSource>, System.Func<TSource, System.Boolean>)
  nameWithType.vb: EnumerableExtensions.FromHierarchy(Of TSource)(TSource, Func(Of TSource, TSource), Func(Of TSource, Boolean))
  fullname.vb: Toscana.Common.EnumerableExtensions.FromHierarchy(Of TSource)(TSource, System.Func(Of TSource, TSource), System.Func(Of TSource, System.Boolean))
  name.vb: FromHierarchy(Of TSource)(TSource, Func(Of TSource, TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
    name: FromHierarchy<TSource>
    nameWithType: EnumerableExtensions.FromHierarchy<TSource>
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
    name: FromHierarchy(Of TSource)
    nameWithType: EnumerableExtensions.FromHierarchy(Of TSource)
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Toscana.Common.EnumerableExtensions
  commentId: T:Toscana.Common.EnumerableExtensions
  parent: Toscana.Common
  isExternal: false
  name: EnumerableExtensions
  nameWithType: EnumerableExtensions
  fullName: Toscana.Common.EnumerableExtensions
- uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
  commentId: M:Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
  isExternal: true
  name: FromHierarchy<TSource>(TSource, Func<TSource, TSource>)
  nameWithType: EnumerableExtensions.FromHierarchy<TSource>(TSource, Func<TSource, TSource>)
  fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<TSource>(TSource, System.Func<TSource, TSource>)
  nameWithType.vb: EnumerableExtensions.FromHierarchy(Of TSource)(TSource, Func(Of TSource, TSource))
  fullname.vb: Toscana.Common.EnumerableExtensions.FromHierarchy(Of TSource)(TSource, System.Func(Of TSource, TSource))
  name.vb: FromHierarchy(Of TSource)(TSource, Func(Of TSource, TSource))
  spec.csharp:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
    name: FromHierarchy<TSource>
    nameWithType: EnumerableExtensions.FromHierarchy<TSource>
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
    name: FromHierarchy(Of TSource)
    nameWithType: EnumerableExtensions.FromHierarchy(Of TSource)
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Toscana.Common.ExceptionExtensions.GetaAllMessages(System.Exception)
  commentId: M:Toscana.Common.ExceptionExtensions.GetaAllMessages(System.Exception)
  isExternal: true
  name: GetaAllMessages(Exception)
  nameWithType: ExceptionExtensions.GetaAllMessages(Exception)
  fullName: Toscana.Common.ExceptionExtensions.GetaAllMessages(System.Exception)
  spec.csharp:
  - uid: Toscana.Common.ExceptionExtensions.GetaAllMessages(System.Exception)
    name: GetaAllMessages
    nameWithType: ExceptionExtensions.GetaAllMessages
    fullName: Toscana.Common.ExceptionExtensions.GetaAllMessages
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.Common.ExceptionExtensions.GetaAllMessages(System.Exception)
    name: GetaAllMessages
    nameWithType: ExceptionExtensions.GetaAllMessages
    fullName: Toscana.Common.ExceptionExtensions.GetaAllMessages
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Toscana.Common.ExceptionExtensions
  commentId: T:Toscana.Common.ExceptionExtensions
  parent: Toscana.Common
  isExternal: false
  name: ExceptionExtensions
  nameWithType: ExceptionExtensions
  fullName: Toscana.Common.ExceptionExtensions
- uid: Toscana.Common
  commentId: N:Toscana.Common
  isExternal: false
  name: Toscana.Common
  nameWithType: Toscana.Common
  fullName: Toscana.Common
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.Runtime.Serialization.SerializationException
  commentId: T:System.Runtime.Serialization.SerializationException
- uid: System.Runtime.Serialization.SerializationInfo
  commentId: T:System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: true
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  commentId: T:System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
