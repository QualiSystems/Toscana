### YamlMime:ManagedReference
items:
- uid: Toscana.ToscaImport
  commentId: T:Toscana.ToscaImport
  id: ToscaImport
  parent: Toscana
  children:
  - Toscana.ToscaImport.File
  - Toscana.ToscaImport.NamespacePrefix
  - Toscana.ToscaImport.NamespaceUri
  - Toscana.ToscaImport.op_Implicit(System.String)~Toscana.ToscaImport
  - Toscana.ToscaImport.Repository
  langs:
  - csharp
  - vb
  name: ToscaImport
  nameWithType: ToscaImport
  fullName: Toscana.ToscaImport
  type: Class
  source:
    remote:
      path: Toscana/ToscaImport.cs
      branch: develop
      repo: https://github.com/QualiSystems/Toscana.git
    id: ToscaImport
    path: Toscana/ToscaImport.cs
    startLine: 9
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nAn import definition is used within a TOSCA Service Template to locate and uniquely \nname another TOSCA Service Template file which has type and template definitions \nto be imported (included) and referenced within another Service Template.\n"
  example: []
  syntax:
    content: public class ToscaImport
    content.vb: Public Class ToscaImport
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Toscana.ToscaImport.Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{Toscana.ToscaImport,Toscana.ToscaImport},System.Func{Toscana.ToscaImport,System.Boolean})
  - Toscana.ToscaImport.Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{Toscana.ToscaImport,Toscana.ToscaImport})
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Toscana.ToscaImport.File
  commentId: P:Toscana.ToscaImport.File
  id: File
  parent: Toscana.ToscaImport
  langs:
  - csharp
  - vb
  name: File
  nameWithType: ToscaImport.File
  fullName: Toscana.ToscaImport.File
  type: Property
  source:
    remote:
      path: Toscana/ToscaImport.cs
      branch: develop
      repo: https://github.com/QualiSystems/Toscana.git
    id: File
    path: Toscana/ToscaImport.cs
    startLine: 14
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nThe required symbolic name for the imported file.\n"
  example: []
  syntax:
    content: >-
      [Required(ErrorMessage = "file is required on import", AllowEmptyStrings = false)]

      public string File { get; set; }
    content.vb: >-
      <Required(ErrorMessage:="file is required on import", AllowEmptyStrings:=False)>

      Public Property File As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: file is required on import
    - name: AllowEmptyStrings
      type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Toscana.ToscaImport.Repository
  commentId: P:Toscana.ToscaImport.Repository
  id: Repository
  parent: Toscana.ToscaImport
  langs:
  - csharp
  - vb
  name: Repository
  nameWithType: ToscaImport.Repository
  fullName: Toscana.ToscaImport.Repository
  type: Property
  source:
    remote:
      path: Toscana/ToscaImport.cs
      branch: develop
      repo: https://github.com/QualiSystems/Toscana.git
    id: Repository
    path: Toscana/ToscaImport.cs
    startLine: 20
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nThe optional symbolic name of the repository definition where the imported file can be found as a string.\n"
  example: []
  syntax:
    content: public string Repository { get; set; }
    content.vb: Public Property Repository As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Toscana.ToscaImport.NamespaceUri
  commentId: P:Toscana.ToscaImport.NamespaceUri
  id: NamespaceUri
  parent: Toscana.ToscaImport
  langs:
  - csharp
  - vb
  name: NamespaceUri
  nameWithType: ToscaImport.NamespaceUri
  fullName: Toscana.ToscaImport.NamespaceUri
  type: Property
  source:
    remote:
      path: Toscana/ToscaImport.cs
      branch: develop
      repo: https://github.com/QualiSystems/Toscana.git
    id: NamespaceUri
    path: Toscana/ToscaImport.cs
    startLine: 25
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nThe optional namespace URI to that will be applied to type definitions found within the imported file as a string\n"
  example: []
  syntax:
    content: public string NamespaceUri { get; set; }
    content.vb: Public Property NamespaceUri As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Toscana.ToscaImport.NamespacePrefix
  commentId: P:Toscana.ToscaImport.NamespacePrefix
  id: NamespacePrefix
  parent: Toscana.ToscaImport
  langs:
  - csharp
  - vb
  name: NamespacePrefix
  nameWithType: ToscaImport.NamespacePrefix
  fullName: Toscana.ToscaImport.NamespacePrefix
  type: Property
  source:
    remote:
      path: Toscana/ToscaImport.cs
      branch: develop
      repo: https://github.com/QualiSystems/Toscana.git
    id: NamespacePrefix
    path: Toscana/ToscaImport.cs
    startLine: 31
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nThe optional namespace prefix (alias) that will be used to indicate the namespace_uri \nwhen forming a qualified name (i.e., qname) when referencing type definitions from the imported file.\n"
  example: []
  syntax:
    content: public string NamespacePrefix { get; set; }
    content.vb: Public Property NamespacePrefix As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Toscana.ToscaImport.op_Implicit(System.String)~Toscana.ToscaImport
  commentId: M:Toscana.ToscaImport.op_Implicit(System.String)~Toscana.ToscaImport
  id: op_Implicit(System.String)~Toscana.ToscaImport
  parent: Toscana.ToscaImport
  langs:
  - csharp
  - vb
  name: Implicit(String to ToscaImport)
  nameWithType: ToscaImport.Implicit(String to ToscaImport)
  fullName: Toscana.ToscaImport.Implicit(System.String to Toscana.ToscaImport)
  type: Operator
  source:
    remote:
      path: Toscana/ToscaImport.cs
      branch: develop
      repo: https://github.com/QualiSystems/Toscana.git
    id: op_Implicit
    path: Toscana/ToscaImport.cs
    startLine: 38
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nInitializes an instance of ToscaImport and set File property\n"
  example: []
  syntax:
    content: public static implicit operator ToscaImport(string val)
    content.vb: Public Shared Widening Operator CType(val As String) As ToscaImport
    parameters:
    - id: val
      type: System.String
      description: value to set to File property
    return:
      type: Toscana.ToscaImport
      description: An instance of ToscaImport with the File value set
  nameWithType.vb: ToscaImport.Widening(String to ToscaImport)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Toscana.ToscaImport.Widening(System.String to Toscana.ToscaImport)
  name.vb: Widening(String to ToscaImport)
references:
- uid: Toscana
  commentId: N:Toscana
  isExternal: false
  name: Toscana
  nameWithType: Toscana
  fullName: Toscana
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Toscana.ToscaImport.Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{Toscana.ToscaImport,Toscana.ToscaImport},System.Func{Toscana.ToscaImport,System.Boolean})
  commentId: M:Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
  parent: Toscana.Common.EnumerableExtensions
  definition: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
  name: FromHierarchy<ToscaImport>(Func<ToscaImport, ToscaImport>, Func<ToscaImport, Boolean>)
  nameWithType: EnumerableExtensions.FromHierarchy<ToscaImport>(Func<ToscaImport, ToscaImport>, Func<ToscaImport, Boolean>)
  fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<Toscana.ToscaImport>(System.Func<Toscana.ToscaImport, Toscana.ToscaImport>, System.Func<Toscana.ToscaImport, System.Boolean>)
  nameWithType.vb: EnumerableExtensions.FromHierarchy(Of ToscaImport)(Func(Of ToscaImport, ToscaImport), Func(Of ToscaImport, Boolean))
  fullname.vb: Toscana.Common.EnumerableExtensions.FromHierarchy(Of Toscana.ToscaImport)(System.Func(Of Toscana.ToscaImport, Toscana.ToscaImport), System.Func(Of Toscana.ToscaImport, System.Boolean))
  name.vb: FromHierarchy(Of ToscaImport)(Func(Of ToscaImport, ToscaImport), Func(Of ToscaImport, Boolean))
  spec.csharp:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{``0,``0},System.Func{``0,System.Boolean})
    name: FromHierarchy<ToscaImport>
    nameWithType: EnumerableExtensions.FromHierarchy<ToscaImport>
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<Toscana.ToscaImport>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Toscana.ToscaImport
    name: ToscaImport
    nameWithType: ToscaImport
    fullName: Toscana.ToscaImport
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Toscana.ToscaImport
    name: ToscaImport
    nameWithType: ToscaImport
    fullName: Toscana.ToscaImport
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Toscana.ToscaImport
    name: ToscaImport
    nameWithType: ToscaImport
    fullName: Toscana.ToscaImport
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{``0,``0},System.Func{``0,System.Boolean})
    name: FromHierarchy(Of ToscaImport)
    nameWithType: EnumerableExtensions.FromHierarchy(Of ToscaImport)
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy(Of Toscana.ToscaImport)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Toscana.ToscaImport
    name: ToscaImport
    nameWithType: ToscaImport
    fullName: Toscana.ToscaImport
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Toscana.ToscaImport
    name: ToscaImport
    nameWithType: ToscaImport
    fullName: Toscana.ToscaImport
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Toscana.ToscaImport
    name: ToscaImport
    nameWithType: ToscaImport
    fullName: Toscana.ToscaImport
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Toscana.ToscaImport.Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{Toscana.ToscaImport,Toscana.ToscaImport})
  commentId: M:Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
  parent: Toscana.Common.EnumerableExtensions
  definition: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
  name: FromHierarchy<ToscaImport>(Func<ToscaImport, ToscaImport>)
  nameWithType: EnumerableExtensions.FromHierarchy<ToscaImport>(Func<ToscaImport, ToscaImport>)
  fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<Toscana.ToscaImport>(System.Func<Toscana.ToscaImport, Toscana.ToscaImport>)
  nameWithType.vb: EnumerableExtensions.FromHierarchy(Of ToscaImport)(Func(Of ToscaImport, ToscaImport))
  fullname.vb: Toscana.Common.EnumerableExtensions.FromHierarchy(Of Toscana.ToscaImport)(System.Func(Of Toscana.ToscaImport, Toscana.ToscaImport))
  name.vb: FromHierarchy(Of ToscaImport)(Func(Of ToscaImport, ToscaImport))
  spec.csharp:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{``0,``0})
    name: FromHierarchy<ToscaImport>
    nameWithType: EnumerableExtensions.FromHierarchy<ToscaImport>
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<Toscana.ToscaImport>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Toscana.ToscaImport
    name: ToscaImport
    nameWithType: ToscaImport
    fullName: Toscana.ToscaImport
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Toscana.ToscaImport
    name: ToscaImport
    nameWithType: ToscaImport
    fullName: Toscana.ToscaImport
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{``0,``0})
    name: FromHierarchy(Of ToscaImport)
    nameWithType: EnumerableExtensions.FromHierarchy(Of ToscaImport)
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy(Of Toscana.ToscaImport)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Toscana.ToscaImport
    name: ToscaImport
    nameWithType: ToscaImport
    fullName: Toscana.ToscaImport
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Toscana.ToscaImport
    name: ToscaImport
    nameWithType: ToscaImport
    fullName: Toscana.ToscaImport
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
  commentId: M:Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: FromHierarchy<TSource>(TSource, Func<TSource, TSource>, Func<TSource, Boolean>)
  nameWithType: EnumerableExtensions.FromHierarchy<TSource>(TSource, Func<TSource, TSource>, Func<TSource, Boolean>)
  fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<TSource>(TSource, System.Func<TSource, TSource>, System.Func<TSource, System.Boolean>)
  nameWithType.vb: EnumerableExtensions.FromHierarchy(Of TSource)(TSource, Func(Of TSource, TSource), Func(Of TSource, Boolean))
  fullname.vb: Toscana.Common.EnumerableExtensions.FromHierarchy(Of TSource)(TSource, System.Func(Of TSource, TSource), System.Func(Of TSource, System.Boolean))
  name.vb: FromHierarchy(Of TSource)(TSource, Func(Of TSource, TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
    name: FromHierarchy<TSource>
    nameWithType: EnumerableExtensions.FromHierarchy<TSource>
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
    name: FromHierarchy(Of TSource)
    nameWithType: EnumerableExtensions.FromHierarchy(Of TSource)
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Toscana.Common.EnumerableExtensions
  commentId: T:Toscana.Common.EnumerableExtensions
  parent: Toscana.Common
  isExternal: false
  name: EnumerableExtensions
  nameWithType: EnumerableExtensions
  fullName: Toscana.Common.EnumerableExtensions
- uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
  commentId: M:Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
  isExternal: true
  name: FromHierarchy<TSource>(TSource, Func<TSource, TSource>)
  nameWithType: EnumerableExtensions.FromHierarchy<TSource>(TSource, Func<TSource, TSource>)
  fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<TSource>(TSource, System.Func<TSource, TSource>)
  nameWithType.vb: EnumerableExtensions.FromHierarchy(Of TSource)(TSource, Func(Of TSource, TSource))
  fullname.vb: Toscana.Common.EnumerableExtensions.FromHierarchy(Of TSource)(TSource, System.Func(Of TSource, TSource))
  name.vb: FromHierarchy(Of TSource)(TSource, Func(Of TSource, TSource))
  spec.csharp:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
    name: FromHierarchy<TSource>
    nameWithType: EnumerableExtensions.FromHierarchy<TSource>
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
    name: FromHierarchy(Of TSource)
    nameWithType: EnumerableExtensions.FromHierarchy(Of TSource)
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Toscana.Common
  commentId: N:Toscana.Common
  isExternal: false
  name: Toscana.Common
  nameWithType: Toscana.Common
  fullName: Toscana.Common
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Toscana.ToscaImport
  commentId: T:Toscana.ToscaImport
  parent: Toscana
  isExternal: false
  name: ToscaImport
  nameWithType: ToscaImport
  fullName: Toscana.ToscaImport
