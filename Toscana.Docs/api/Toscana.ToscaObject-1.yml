### YamlMime:ManagedReference
items:
- uid: Toscana.ToscaObject`1
  commentId: T:Toscana.ToscaObject`1
  id: ToscaObject`1
  parent: Toscana
  children:
  - Toscana.ToscaObject`1.DerivedFrom
  - Toscana.ToscaObject`1.GetCloudServiceArchive
  - Toscana.ToscaObject`1.GetDerivedFromEntity
  - Toscana.ToscaObject`1.IsRoot
  - Toscana.ToscaObject`1.SetDerivedFromToRoot(System.String)
  langs:
  - csharp
  - vb
  name: ToscaObject<T>
  nameWithType: ToscaObject<T>
  fullName: Toscana.ToscaObject<T>
  type: Class
  source:
    remote:
      path: Toscana/ToscaObject.cs
      branch: master
      repo: https://github.com/QualiSystems/Toscana.git
    id: ToscaObject
    path: Toscana/ToscaObject.cs
    startLine: 43
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nGetDerivedFromEntity object for TOSCA entities that support inheritance\n"
  example: []
  syntax:
    content: 'public abstract class ToscaObject<T> : IDerivableToscaEntity<T> where T : ToscaObject<T>'
    content.vb: >-
      Public MustInherit Class ToscaObject(Of T As ToscaObject(Of T))
          Implements IDerivableToscaEntity(Of T)
    typeParameters:
    - id: T
  inheritance:
  - System.Object
  implements:
  - Toscana.IDerivableToscaEntity{{T}}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Toscana.ToscaObject`1.Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{Toscana.ToscaObject{{T}},Toscana.ToscaObject{{T}}},System.Func{Toscana.ToscaObject{{T}},System.Boolean})
  - Toscana.ToscaObject`1.Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{Toscana.ToscaObject{{T}},Toscana.ToscaObject{{T}}})
  nameWithType.vb: ToscaObject(Of T)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Toscana.ToscaObject(Of T)
  name.vb: ToscaObject(Of T)
- uid: Toscana.ToscaObject`1.DerivedFrom
  commentId: P:Toscana.ToscaObject`1.DerivedFrom
  id: DerivedFrom
  parent: Toscana.ToscaObject`1
  langs:
  - csharp
  - vb
  name: DerivedFrom
  nameWithType: ToscaObject<T>.DerivedFrom
  fullName: Toscana.ToscaObject<T>.DerivedFrom
  type: Property
  source:
    remote:
      path: Toscana/ToscaObject.cs
      branch: master
      repo: https://github.com/QualiSystems/Toscana.git
    id: DerivedFrom
    path: Toscana/ToscaObject.cs
    startLine: 53
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nAn optional name of parent entity this new entity derives from.\n"
  example: []
  syntax:
    content: public string DerivedFrom { get; set; }
    content.vb: Public Property DerivedFrom As String
    parameters: []
    return:
      type: System.String
  implements:
  - Toscana.IDerivableToscaEntity{{T}}.DerivedFrom
  nameWithType.vb: ToscaObject(Of T).DerivedFrom
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Toscana.ToscaObject(Of T).DerivedFrom
- uid: Toscana.ToscaObject`1.GetCloudServiceArchive
  commentId: M:Toscana.ToscaObject`1.GetCloudServiceArchive
  id: GetCloudServiceArchive
  parent: Toscana.ToscaObject`1
  langs:
  - csharp
  - vb
  name: GetCloudServiceArchive()
  nameWithType: ToscaObject<T>.GetCloudServiceArchive()
  fullName: Toscana.ToscaObject<T>.GetCloudServiceArchive()
  type: Method
  source:
    remote:
      path: Toscana/ToscaObject.cs
      branch: master
      repo: https://github.com/QualiSystems/Toscana.git
    id: GetCloudServiceArchive
    path: Toscana/ToscaObject.cs
    startLine: 58
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nReference to the <xref href=\"Toscana.ToscaCloudServiceArchive\" data-throw-if-not-resolved=\"false\"></xref> the entity belongs \n"
  example: []
  syntax:
    content: protected ToscaCloudServiceArchive GetCloudServiceArchive()
    content.vb: Protected Function GetCloudServiceArchive As ToscaCloudServiceArchive
    return:
      type: Toscana.ToscaCloudServiceArchive
  nameWithType.vb: ToscaObject(Of T).GetCloudServiceArchive()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Toscana.ToscaObject(Of T).GetCloudServiceArchive()
- uid: Toscana.ToscaObject`1.GetDerivedFromEntity
  commentId: M:Toscana.ToscaObject`1.GetDerivedFromEntity
  id: GetDerivedFromEntity
  parent: Toscana.ToscaObject`1
  langs:
  - csharp
  - vb
  name: GetDerivedFromEntity()
  nameWithType: ToscaObject<T>.GetDerivedFromEntity()
  fullName: Toscana.ToscaObject<T>.GetDerivedFromEntity()
  type: Method
  source:
    remote:
      path: Toscana/ToscaObject.cs
      branch: master
      repo: https://github.com/QualiSystems/Toscana.git
    id: GetDerivedFromEntity
    path: Toscana/ToscaObject.cs
    startLine: 77
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nReturns an entity that this entity derives from.\nIf this entity is root, null will be returned\nIf this entity derives from a non existing entity exception will be thrown\n"
  example: []
  syntax:
    content: public abstract T GetDerivedFromEntity()
    content.vb: Public MustOverride Function GetDerivedFromEntity As T
    return:
      type: '{T}'
  implements:
  - Toscana.IDerivableToscaEntity{{T}}.GetDerivedFromEntity
  nameWithType.vb: ToscaObject(Of T).GetDerivedFromEntity()
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Toscana.ToscaObject(Of T).GetDerivedFromEntity()
- uid: Toscana.ToscaObject`1.IsRoot
  commentId: M:Toscana.ToscaObject`1.IsRoot
  id: IsRoot
  parent: Toscana.ToscaObject`1
  langs:
  - csharp
  - vb
  name: IsRoot()
  nameWithType: ToscaObject<T>.IsRoot()
  fullName: Toscana.ToscaObject<T>.IsRoot()
  type: Method
  source:
    remote:
      path: Toscana/ToscaObject.cs
      branch: master
      repo: https://github.com/QualiSystems/Toscana.git
    id: IsRoot
    path: Toscana/ToscaObject.cs
    startLine: 84
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nReturns True if this entity is the root, which other entities derive from it.\nFalse otherwise\n"
  example: []
  syntax:
    content: public bool IsRoot()
    content.vb: Public Function IsRoot As Boolean
    return:
      type: System.Boolean
      description: ''
  implements:
  - Toscana.IDerivableToscaEntity{{T}}.IsRoot
  nameWithType.vb: ToscaObject(Of T).IsRoot()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Toscana.ToscaObject(Of T).IsRoot()
- uid: Toscana.ToscaObject`1.SetDerivedFromToRoot(System.String)
  commentId: M:Toscana.ToscaObject`1.SetDerivedFromToRoot(System.String)
  id: SetDerivedFromToRoot(System.String)
  parent: Toscana.ToscaObject`1
  langs:
  - csharp
  - vb
  name: SetDerivedFromToRoot(String)
  nameWithType: ToscaObject<T>.SetDerivedFromToRoot(String)
  fullName: Toscana.ToscaObject<T>.SetDerivedFromToRoot(System.String)
  type: Method
  source:
    remote:
      path: Toscana/ToscaObject.cs
      branch: master
      repo: https://github.com/QualiSystems/Toscana.git
    id: SetDerivedFromToRoot
    path: Toscana/ToscaObject.cs
    startLine: 93
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nSets DerivedFrom to point to root if it's not set\n"
  example: []
  syntax:
    content: public abstract void SetDerivedFromToRoot(string name)
    content.vb: Public MustOverride Sub SetDerivedFromToRoot(name As String)
    parameters:
    - id: name
      type: System.String
      description: Object name
  implements:
  - Toscana.IDerivableToscaEntity{{T}}.SetDerivedFromToRoot(System.String)
  nameWithType.vb: ToscaObject(Of T).SetDerivedFromToRoot(String)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Toscana.ToscaObject(Of T).SetDerivedFromToRoot(System.String)
references:
- uid: Toscana
  commentId: N:Toscana
  isExternal: false
  name: Toscana
  nameWithType: Toscana
  fullName: Toscana
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Toscana.IDerivableToscaEntity{{T}}
  commentId: T:Toscana.IDerivableToscaEntity{`0}
  parent: Toscana
  definition: Toscana.IDerivableToscaEntity`1
  name: IDerivableToscaEntity<T>
  nameWithType: IDerivableToscaEntity<T>
  fullName: Toscana.IDerivableToscaEntity<T>
  nameWithType.vb: IDerivableToscaEntity(Of T)
  fullname.vb: Toscana.IDerivableToscaEntity(Of T)
  name.vb: IDerivableToscaEntity(Of T)
  spec.csharp:
  - uid: Toscana.IDerivableToscaEntity`1
    name: IDerivableToscaEntity
    nameWithType: IDerivableToscaEntity
    fullName: Toscana.IDerivableToscaEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Toscana.IDerivableToscaEntity`1
    name: IDerivableToscaEntity
    nameWithType: IDerivableToscaEntity
    fullName: Toscana.IDerivableToscaEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Toscana.ToscaObject`1.Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{Toscana.ToscaObject{{T}},Toscana.ToscaObject{{T}}},System.Func{Toscana.ToscaObject{{T}},System.Boolean})
  commentId: M:Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
  parent: Toscana.Common.EnumerableExtensions
  definition: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
  name: FromHierarchy<ToscaObject<T>>(Func<ToscaObject<T>, ToscaObject<T>>, Func<ToscaObject<T>, Boolean>)
  nameWithType: EnumerableExtensions.FromHierarchy<ToscaObject<T>>(Func<ToscaObject<T>, ToscaObject<T>>, Func<ToscaObject<T>, Boolean>)
  fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<Toscana.ToscaObject<T>>(System.Func<Toscana.ToscaObject<T>, Toscana.ToscaObject<T>>, System.Func<Toscana.ToscaObject<T>, System.Boolean>)
  nameWithType.vb: EnumerableExtensions.FromHierarchy(Of ToscaObject(Of T))(Func(Of ToscaObject(Of T), ToscaObject(Of T)), Func(Of ToscaObject(Of T), Boolean))
  fullname.vb: Toscana.Common.EnumerableExtensions.FromHierarchy(Of Toscana.ToscaObject(Of T))(System.Func(Of Toscana.ToscaObject(Of T), Toscana.ToscaObject(Of T)), System.Func(Of Toscana.ToscaObject(Of T), System.Boolean))
  name.vb: FromHierarchy(Of ToscaObject(Of T))(Func(Of ToscaObject(Of T), ToscaObject(Of T)), Func(Of ToscaObject(Of T), Boolean))
  spec.csharp:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{``0,``0},System.Func{``0,System.Boolean})
    name: FromHierarchy<ToscaObject<T>>
    nameWithType: EnumerableExtensions.FromHierarchy<ToscaObject<T>>
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<Toscana.ToscaObject<T>>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Toscana.ToscaObject`1
    name: ToscaObject
    nameWithType: ToscaObject
    fullName: Toscana.ToscaObject
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Toscana.ToscaObject`1
    name: ToscaObject
    nameWithType: ToscaObject
    fullName: Toscana.ToscaObject
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Toscana.ToscaObject`1
    name: ToscaObject
    nameWithType: ToscaObject
    fullName: Toscana.ToscaObject
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{``0,``0},System.Func{``0,System.Boolean})
    name: FromHierarchy(Of ToscaObject(Of T))
    nameWithType: EnumerableExtensions.FromHierarchy(Of ToscaObject(Of T))
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy(Of Toscana.ToscaObject(Of T))
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Toscana.ToscaObject`1
    name: ToscaObject
    nameWithType: ToscaObject
    fullName: Toscana.ToscaObject
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Toscana.ToscaObject`1
    name: ToscaObject
    nameWithType: ToscaObject
    fullName: Toscana.ToscaObject
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Toscana.ToscaObject`1
    name: ToscaObject
    nameWithType: ToscaObject
    fullName: Toscana.ToscaObject
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Toscana.ToscaObject`1.Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{Toscana.ToscaObject{{T}},Toscana.ToscaObject{{T}}})
  commentId: M:Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
  parent: Toscana.Common.EnumerableExtensions
  definition: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
  name: FromHierarchy<ToscaObject<T>>(Func<ToscaObject<T>, ToscaObject<T>>)
  nameWithType: EnumerableExtensions.FromHierarchy<ToscaObject<T>>(Func<ToscaObject<T>, ToscaObject<T>>)
  fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<Toscana.ToscaObject<T>>(System.Func<Toscana.ToscaObject<T>, Toscana.ToscaObject<T>>)
  nameWithType.vb: EnumerableExtensions.FromHierarchy(Of ToscaObject(Of T))(Func(Of ToscaObject(Of T), ToscaObject(Of T)))
  fullname.vb: Toscana.Common.EnumerableExtensions.FromHierarchy(Of Toscana.ToscaObject(Of T))(System.Func(Of Toscana.ToscaObject(Of T), Toscana.ToscaObject(Of T)))
  name.vb: FromHierarchy(Of ToscaObject(Of T))(Func(Of ToscaObject(Of T), ToscaObject(Of T)))
  spec.csharp:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{``0,``0})
    name: FromHierarchy<ToscaObject<T>>
    nameWithType: EnumerableExtensions.FromHierarchy<ToscaObject<T>>
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<Toscana.ToscaObject<T>>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Toscana.ToscaObject`1
    name: ToscaObject
    nameWithType: ToscaObject
    fullName: Toscana.ToscaObject
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Toscana.ToscaObject`1
    name: ToscaObject
    nameWithType: ToscaObject
    fullName: Toscana.ToscaObject
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{``0,``0})
    name: FromHierarchy(Of ToscaObject(Of T))
    nameWithType: EnumerableExtensions.FromHierarchy(Of ToscaObject(Of T))
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy(Of Toscana.ToscaObject(Of T))
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Toscana.ToscaObject`1
    name: ToscaObject
    nameWithType: ToscaObject
    fullName: Toscana.ToscaObject
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Toscana.ToscaObject`1
    name: ToscaObject
    nameWithType: ToscaObject
    fullName: Toscana.ToscaObject
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Toscana.IDerivableToscaEntity`1
  commentId: T:Toscana.IDerivableToscaEntity`1
  isExternal: false
  name: IDerivableToscaEntity<T>
  nameWithType: IDerivableToscaEntity<T>
  fullName: Toscana.IDerivableToscaEntity<T>
  nameWithType.vb: IDerivableToscaEntity(Of T)
  fullname.vb: Toscana.IDerivableToscaEntity(Of T)
  name.vb: IDerivableToscaEntity(Of T)
  spec.csharp:
  - uid: Toscana.IDerivableToscaEntity`1
    name: IDerivableToscaEntity
    nameWithType: IDerivableToscaEntity
    fullName: Toscana.IDerivableToscaEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Toscana.IDerivableToscaEntity`1
    name: IDerivableToscaEntity
    nameWithType: IDerivableToscaEntity
    fullName: Toscana.IDerivableToscaEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
  commentId: M:Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: FromHierarchy<TSource>(TSource, Func<TSource, TSource>, Func<TSource, Boolean>)
  nameWithType: EnumerableExtensions.FromHierarchy<TSource>(TSource, Func<TSource, TSource>, Func<TSource, Boolean>)
  fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<TSource>(TSource, System.Func<TSource, TSource>, System.Func<TSource, System.Boolean>)
  nameWithType.vb: EnumerableExtensions.FromHierarchy(Of TSource)(TSource, Func(Of TSource, TSource), Func(Of TSource, Boolean))
  fullname.vb: Toscana.Common.EnumerableExtensions.FromHierarchy(Of TSource)(TSource, System.Func(Of TSource, TSource), System.Func(Of TSource, System.Boolean))
  name.vb: FromHierarchy(Of TSource)(TSource, Func(Of TSource, TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
    name: FromHierarchy<TSource>
    nameWithType: EnumerableExtensions.FromHierarchy<TSource>
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
    name: FromHierarchy(Of TSource)
    nameWithType: EnumerableExtensions.FromHierarchy(Of TSource)
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Toscana.Common.EnumerableExtensions
  commentId: T:Toscana.Common.EnumerableExtensions
  parent: Toscana.Common
  isExternal: false
  name: EnumerableExtensions
  nameWithType: EnumerableExtensions
  fullName: Toscana.Common.EnumerableExtensions
- uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
  commentId: M:Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
  isExternal: true
  name: FromHierarchy<TSource>(TSource, Func<TSource, TSource>)
  nameWithType: EnumerableExtensions.FromHierarchy<TSource>(TSource, Func<TSource, TSource>)
  fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<TSource>(TSource, System.Func<TSource, TSource>)
  nameWithType.vb: EnumerableExtensions.FromHierarchy(Of TSource)(TSource, Func(Of TSource, TSource))
  fullname.vb: Toscana.Common.EnumerableExtensions.FromHierarchy(Of TSource)(TSource, System.Func(Of TSource, TSource))
  name.vb: FromHierarchy(Of TSource)(TSource, Func(Of TSource, TSource))
  spec.csharp:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
    name: FromHierarchy<TSource>
    nameWithType: EnumerableExtensions.FromHierarchy<TSource>
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
    name: FromHierarchy(Of TSource)
    nameWithType: EnumerableExtensions.FromHierarchy(Of TSource)
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Toscana.Common
  commentId: N:Toscana.Common
  isExternal: false
  name: Toscana.Common
  nameWithType: Toscana.Common
  fullName: Toscana.Common
- uid: Toscana.IDerivableToscaEntity{{T}}.DerivedFrom
  commentId: P:Toscana.IDerivableToscaEntity{`0}.DerivedFrom
  parent: Toscana.IDerivableToscaEntity{{T}}
  definition: Toscana.IDerivableToscaEntity`1.DerivedFrom
  name: DerivedFrom
  nameWithType: IDerivableToscaEntity<T>.DerivedFrom
  fullName: Toscana.IDerivableToscaEntity<T>.DerivedFrom
  nameWithType.vb: IDerivableToscaEntity(Of T).DerivedFrom
  fullname.vb: Toscana.IDerivableToscaEntity(Of T).DerivedFrom
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Toscana.IDerivableToscaEntity`1.DerivedFrom
  commentId: P:Toscana.IDerivableToscaEntity`1.DerivedFrom
  isExternal: false
  name: DerivedFrom
  nameWithType: IDerivableToscaEntity<T>.DerivedFrom
  fullName: Toscana.IDerivableToscaEntity<T>.DerivedFrom
  nameWithType.vb: IDerivableToscaEntity(Of T).DerivedFrom
  fullname.vb: Toscana.IDerivableToscaEntity(Of T).DerivedFrom
- uid: Toscana.ToscaCloudServiceArchive
  commentId: T:Toscana.ToscaCloudServiceArchive
  parent: Toscana
  isExternal: false
  name: ToscaCloudServiceArchive
  nameWithType: ToscaCloudServiceArchive
  fullName: Toscana.ToscaCloudServiceArchive
- uid: Toscana.IDerivableToscaEntity{{T}}.GetDerivedFromEntity
  commentId: M:Toscana.IDerivableToscaEntity{`0}.GetDerivedFromEntity
  parent: Toscana.IDerivableToscaEntity{{T}}
  definition: Toscana.IDerivableToscaEntity`1.GetDerivedFromEntity
  name: GetDerivedFromEntity()
  nameWithType: IDerivableToscaEntity<T>.GetDerivedFromEntity()
  fullName: Toscana.IDerivableToscaEntity<T>.GetDerivedFromEntity()
  nameWithType.vb: IDerivableToscaEntity(Of T).GetDerivedFromEntity()
  fullname.vb: Toscana.IDerivableToscaEntity(Of T).GetDerivedFromEntity()
  spec.csharp:
  - uid: Toscana.IDerivableToscaEntity`1.GetDerivedFromEntity
    name: GetDerivedFromEntity
    nameWithType: IDerivableToscaEntity<T>.GetDerivedFromEntity
    fullName: Toscana.IDerivableToscaEntity<T>.GetDerivedFromEntity
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.IDerivableToscaEntity`1.GetDerivedFromEntity
    name: GetDerivedFromEntity
    nameWithType: IDerivableToscaEntity(Of T).GetDerivedFromEntity
    fullName: Toscana.IDerivableToscaEntity(Of T).GetDerivedFromEntity
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: Toscana.IDerivableToscaEntity`1.GetDerivedFromEntity
  commentId: M:Toscana.IDerivableToscaEntity`1.GetDerivedFromEntity
  isExternal: false
  name: GetDerivedFromEntity()
  nameWithType: IDerivableToscaEntity<T>.GetDerivedFromEntity()
  fullName: Toscana.IDerivableToscaEntity<T>.GetDerivedFromEntity()
  nameWithType.vb: IDerivableToscaEntity(Of T).GetDerivedFromEntity()
  fullname.vb: Toscana.IDerivableToscaEntity(Of T).GetDerivedFromEntity()
  spec.csharp:
  - uid: Toscana.IDerivableToscaEntity`1.GetDerivedFromEntity
    name: GetDerivedFromEntity
    nameWithType: IDerivableToscaEntity<T>.GetDerivedFromEntity
    fullName: Toscana.IDerivableToscaEntity<T>.GetDerivedFromEntity
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.IDerivableToscaEntity`1.GetDerivedFromEntity
    name: GetDerivedFromEntity
    nameWithType: IDerivableToscaEntity(Of T).GetDerivedFromEntity
    fullName: Toscana.IDerivableToscaEntity(Of T).GetDerivedFromEntity
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: Toscana.IDerivableToscaEntity{{T}}.IsRoot
  commentId: M:Toscana.IDerivableToscaEntity{`0}.IsRoot
  parent: Toscana.IDerivableToscaEntity{{T}}
  definition: Toscana.IDerivableToscaEntity`1.IsRoot
  name: IsRoot()
  nameWithType: IDerivableToscaEntity<T>.IsRoot()
  fullName: Toscana.IDerivableToscaEntity<T>.IsRoot()
  nameWithType.vb: IDerivableToscaEntity(Of T).IsRoot()
  fullname.vb: Toscana.IDerivableToscaEntity(Of T).IsRoot()
  spec.csharp:
  - uid: Toscana.IDerivableToscaEntity`1.IsRoot
    name: IsRoot
    nameWithType: IDerivableToscaEntity<T>.IsRoot
    fullName: Toscana.IDerivableToscaEntity<T>.IsRoot
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.IDerivableToscaEntity`1.IsRoot
    name: IsRoot
    nameWithType: IDerivableToscaEntity(Of T).IsRoot
    fullName: Toscana.IDerivableToscaEntity(Of T).IsRoot
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Toscana.IDerivableToscaEntity`1.IsRoot
  commentId: M:Toscana.IDerivableToscaEntity`1.IsRoot
  isExternal: false
  name: IsRoot()
  nameWithType: IDerivableToscaEntity<T>.IsRoot()
  fullName: Toscana.IDerivableToscaEntity<T>.IsRoot()
  nameWithType.vb: IDerivableToscaEntity(Of T).IsRoot()
  fullname.vb: Toscana.IDerivableToscaEntity(Of T).IsRoot()
  spec.csharp:
  - uid: Toscana.IDerivableToscaEntity`1.IsRoot
    name: IsRoot
    nameWithType: IDerivableToscaEntity<T>.IsRoot
    fullName: Toscana.IDerivableToscaEntity<T>.IsRoot
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.IDerivableToscaEntity`1.IsRoot
    name: IsRoot
    nameWithType: IDerivableToscaEntity(Of T).IsRoot
    fullName: Toscana.IDerivableToscaEntity(Of T).IsRoot
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Toscana.IDerivableToscaEntity{{T}}.SetDerivedFromToRoot(System.String)
  commentId: M:Toscana.IDerivableToscaEntity{`0}.SetDerivedFromToRoot(System.String)
  parent: Toscana.IDerivableToscaEntity{{T}}
  definition: Toscana.IDerivableToscaEntity`1.SetDerivedFromToRoot(System.String)
  name: SetDerivedFromToRoot(String)
  nameWithType: IDerivableToscaEntity<T>.SetDerivedFromToRoot(String)
  fullName: Toscana.IDerivableToscaEntity<T>.SetDerivedFromToRoot(System.String)
  nameWithType.vb: IDerivableToscaEntity(Of T).SetDerivedFromToRoot(String)
  fullname.vb: Toscana.IDerivableToscaEntity(Of T).SetDerivedFromToRoot(System.String)
  spec.csharp:
  - uid: Toscana.IDerivableToscaEntity`1.SetDerivedFromToRoot(System.String)
    name: SetDerivedFromToRoot
    nameWithType: IDerivableToscaEntity<T>.SetDerivedFromToRoot
    fullName: Toscana.IDerivableToscaEntity<T>.SetDerivedFromToRoot
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.IDerivableToscaEntity`1.SetDerivedFromToRoot(System.String)
    name: SetDerivedFromToRoot
    nameWithType: IDerivableToscaEntity(Of T).SetDerivedFromToRoot
    fullName: Toscana.IDerivableToscaEntity(Of T).SetDerivedFromToRoot
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Toscana.IDerivableToscaEntity`1.SetDerivedFromToRoot(System.String)
  commentId: M:Toscana.IDerivableToscaEntity`1.SetDerivedFromToRoot(System.String)
  isExternal: true
  name: SetDerivedFromToRoot(String)
  nameWithType: IDerivableToscaEntity<T>.SetDerivedFromToRoot(String)
  fullName: Toscana.IDerivableToscaEntity<T>.SetDerivedFromToRoot(System.String)
  nameWithType.vb: IDerivableToscaEntity(Of T).SetDerivedFromToRoot(String)
  fullname.vb: Toscana.IDerivableToscaEntity(Of T).SetDerivedFromToRoot(System.String)
  spec.csharp:
  - uid: Toscana.IDerivableToscaEntity`1.SetDerivedFromToRoot(System.String)
    name: SetDerivedFromToRoot
    nameWithType: IDerivableToscaEntity<T>.SetDerivedFromToRoot
    fullName: Toscana.IDerivableToscaEntity<T>.SetDerivedFromToRoot
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.IDerivableToscaEntity`1.SetDerivedFromToRoot(System.String)
    name: SetDerivedFromToRoot
    nameWithType: IDerivableToscaEntity(Of T).SetDerivedFromToRoot
    fullName: Toscana.IDerivableToscaEntity(Of T).SetDerivedFromToRoot
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
