### YamlMime:ManagedReference
items:
- uid: Toscana.ToscaPropertyEntrySchema
  commentId: T:Toscana.ToscaPropertyEntrySchema
  id: ToscaPropertyEntrySchema
  parent: Toscana
  children:
  - Toscana.ToscaPropertyEntrySchema.Constraints
  - Toscana.ToscaPropertyEntrySchema.Description
  - Toscana.ToscaPropertyEntrySchema.op_Implicit(System.String)~Toscana.ToscaPropertyEntrySchema
  - Toscana.ToscaPropertyEntrySchema.Type
  langs:
  - csharp
  - vb
  name: ToscaPropertyEntrySchema
  nameWithType: ToscaPropertyEntrySchema
  fullName: Toscana.ToscaPropertyEntrySchema
  type: Class
  source:
    remote:
      path: Toscana/ToscaPropertyEntrySchema.cs
      branch: master
      repo: https://github.com/QualiSystems/Toscana.git
    id: ToscaPropertyEntrySchema
    path: Toscana/ToscaPropertyEntrySchema.cs
    startLine: 7
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nThe optional key that is used to declare the name of the Datatype definition for entries of set types such as the TOSCA list or map.\n"
  example: []
  syntax:
    content: public class ToscaPropertyEntrySchema
    content.vb: Public Class ToscaPropertyEntrySchema
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Toscana.ToscaPropertyEntrySchema.Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{Toscana.ToscaPropertyEntrySchema,Toscana.ToscaPropertyEntrySchema},System.Func{Toscana.ToscaPropertyEntrySchema,System.Boolean})
  - Toscana.ToscaPropertyEntrySchema.Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{Toscana.ToscaPropertyEntrySchema,Toscana.ToscaPropertyEntrySchema})
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Toscana.ToscaPropertyEntrySchema.Description
  commentId: P:Toscana.ToscaPropertyEntrySchema.Description
  id: Description
  parent: Toscana.ToscaPropertyEntrySchema
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: ToscaPropertyEntrySchema.Description
  fullName: Toscana.ToscaPropertyEntrySchema.Description
  type: Property
  source:
    remote:
      path: Toscana/ToscaPropertyEntrySchema.cs
      branch: master
      repo: https://github.com/QualiSystems/Toscana.git
    id: Description
    path: Toscana/ToscaPropertyEntrySchema.cs
    startLine: 12
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\n Represents the optional description of the entry schema.\n"
  example: []
  syntax:
    content: public string Description { get; set; }
    content.vb: Public Property Description As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Toscana.ToscaPropertyEntrySchema.Type
  commentId: P:Toscana.ToscaPropertyEntrySchema.Type
  id: Type
  parent: Toscana.ToscaPropertyEntrySchema
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: ToscaPropertyEntrySchema.Type
  fullName: Toscana.ToscaPropertyEntrySchema.Type
  type: Property
  source:
    remote:
      path: Toscana/ToscaPropertyEntrySchema.cs
      branch: master
      repo: https://github.com/QualiSystems/Toscana.git
    id: Type
    path: Toscana/ToscaPropertyEntrySchema.cs
    startLine: 17
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nRepresents the required type name for entries in a list or map  property type.\n"
  example: []
  syntax:
    content: public string Type { get; set; }
    content.vb: Public Property Type As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Toscana.ToscaPropertyEntrySchema.Constraints
  commentId: P:Toscana.ToscaPropertyEntrySchema.Constraints
  id: Constraints
  parent: Toscana.ToscaPropertyEntrySchema
  langs:
  - csharp
  - vb
  name: Constraints
  nameWithType: ToscaPropertyEntrySchema.Constraints
  fullName: Toscana.ToscaPropertyEntrySchema.Constraints
  type: Property
  source:
    remote:
      path: Toscana/ToscaPropertyEntrySchema.cs
      branch: master
      repo: https://github.com/QualiSystems/Toscana.git
    id: Constraints
    path: Toscana/ToscaPropertyEntrySchema.cs
    startLine: 22
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nRepresents the optional sequenced list of one or more constraint clauses on entries in a list or map property type.\n"
  example: []
  syntax:
    content: public List<Dictionary<string, object>> Constraints { get; set; }
    content.vb: Public Property Constraints As List(Of Dictionary(Of String, Object))
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.Object}}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Toscana.ToscaPropertyEntrySchema.op_Implicit(System.String)~Toscana.ToscaPropertyEntrySchema
  commentId: M:Toscana.ToscaPropertyEntrySchema.op_Implicit(System.String)~Toscana.ToscaPropertyEntrySchema
  id: op_Implicit(System.String)~Toscana.ToscaPropertyEntrySchema
  parent: Toscana.ToscaPropertyEntrySchema
  langs:
  - csharp
  - vb
  name: Implicit(String to ToscaPropertyEntrySchema)
  nameWithType: ToscaPropertyEntrySchema.Implicit(String to ToscaPropertyEntrySchema)
  fullName: Toscana.ToscaPropertyEntrySchema.Implicit(System.String to Toscana.ToscaPropertyEntrySchema)
  type: Operator
  source:
    remote:
      path: Toscana/ToscaPropertyEntrySchema.cs
      branch: master
      repo: https://github.com/QualiSystems/Toscana.git
    id: op_Implicit
    path: Toscana/ToscaPropertyEntrySchema.cs
    startLine: 29
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nInitializes <xref href=\"Toscana.ToscaPropertyEntrySchema\" data-throw-if-not-resolved=\"false\"></xref> by a given type\n"
  example: []
  syntax:
    content: public static implicit operator ToscaPropertyEntrySchema(string type)
    content.vb: Public Shared Widening Operator CType(type As String) As ToscaPropertyEntrySchema
    parameters:
    - id: type
      type: System.String
      description: ''
    return:
      type: Toscana.ToscaPropertyEntrySchema
      description: ''
  nameWithType.vb: ToscaPropertyEntrySchema.Widening(String to ToscaPropertyEntrySchema)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Toscana.ToscaPropertyEntrySchema.Widening(System.String to Toscana.ToscaPropertyEntrySchema)
  name.vb: Widening(String to ToscaPropertyEntrySchema)
references:
- uid: Toscana
  commentId: N:Toscana
  isExternal: false
  name: Toscana
  nameWithType: Toscana
  fullName: Toscana
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Toscana.ToscaPropertyEntrySchema.Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{Toscana.ToscaPropertyEntrySchema,Toscana.ToscaPropertyEntrySchema},System.Func{Toscana.ToscaPropertyEntrySchema,System.Boolean})
  commentId: M:Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
  parent: Toscana.Common.EnumerableExtensions
  definition: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
  name: FromHierarchy<ToscaPropertyEntrySchema>(Func<ToscaPropertyEntrySchema, ToscaPropertyEntrySchema>, Func<ToscaPropertyEntrySchema, Boolean>)
  nameWithType: EnumerableExtensions.FromHierarchy<ToscaPropertyEntrySchema>(Func<ToscaPropertyEntrySchema, ToscaPropertyEntrySchema>, Func<ToscaPropertyEntrySchema, Boolean>)
  fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<Toscana.ToscaPropertyEntrySchema>(System.Func<Toscana.ToscaPropertyEntrySchema, Toscana.ToscaPropertyEntrySchema>, System.Func<Toscana.ToscaPropertyEntrySchema, System.Boolean>)
  nameWithType.vb: EnumerableExtensions.FromHierarchy(Of ToscaPropertyEntrySchema)(Func(Of ToscaPropertyEntrySchema, ToscaPropertyEntrySchema), Func(Of ToscaPropertyEntrySchema, Boolean))
  fullname.vb: Toscana.Common.EnumerableExtensions.FromHierarchy(Of Toscana.ToscaPropertyEntrySchema)(System.Func(Of Toscana.ToscaPropertyEntrySchema, Toscana.ToscaPropertyEntrySchema), System.Func(Of Toscana.ToscaPropertyEntrySchema, System.Boolean))
  name.vb: FromHierarchy(Of ToscaPropertyEntrySchema)(Func(Of ToscaPropertyEntrySchema, ToscaPropertyEntrySchema), Func(Of ToscaPropertyEntrySchema, Boolean))
  spec.csharp:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{``0,``0},System.Func{``0,System.Boolean})
    name: FromHierarchy<ToscaPropertyEntrySchema>
    nameWithType: EnumerableExtensions.FromHierarchy<ToscaPropertyEntrySchema>
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<Toscana.ToscaPropertyEntrySchema>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Toscana.ToscaPropertyEntrySchema
    name: ToscaPropertyEntrySchema
    nameWithType: ToscaPropertyEntrySchema
    fullName: Toscana.ToscaPropertyEntrySchema
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Toscana.ToscaPropertyEntrySchema
    name: ToscaPropertyEntrySchema
    nameWithType: ToscaPropertyEntrySchema
    fullName: Toscana.ToscaPropertyEntrySchema
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Toscana.ToscaPropertyEntrySchema
    name: ToscaPropertyEntrySchema
    nameWithType: ToscaPropertyEntrySchema
    fullName: Toscana.ToscaPropertyEntrySchema
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{``0,``0},System.Func{``0,System.Boolean})
    name: FromHierarchy(Of ToscaPropertyEntrySchema)
    nameWithType: EnumerableExtensions.FromHierarchy(Of ToscaPropertyEntrySchema)
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy(Of Toscana.ToscaPropertyEntrySchema)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Toscana.ToscaPropertyEntrySchema
    name: ToscaPropertyEntrySchema
    nameWithType: ToscaPropertyEntrySchema
    fullName: Toscana.ToscaPropertyEntrySchema
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Toscana.ToscaPropertyEntrySchema
    name: ToscaPropertyEntrySchema
    nameWithType: ToscaPropertyEntrySchema
    fullName: Toscana.ToscaPropertyEntrySchema
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Toscana.ToscaPropertyEntrySchema
    name: ToscaPropertyEntrySchema
    nameWithType: ToscaPropertyEntrySchema
    fullName: Toscana.ToscaPropertyEntrySchema
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Toscana.ToscaPropertyEntrySchema.Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{Toscana.ToscaPropertyEntrySchema,Toscana.ToscaPropertyEntrySchema})
  commentId: M:Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
  parent: Toscana.Common.EnumerableExtensions
  definition: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
  name: FromHierarchy<ToscaPropertyEntrySchema>(Func<ToscaPropertyEntrySchema, ToscaPropertyEntrySchema>)
  nameWithType: EnumerableExtensions.FromHierarchy<ToscaPropertyEntrySchema>(Func<ToscaPropertyEntrySchema, ToscaPropertyEntrySchema>)
  fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<Toscana.ToscaPropertyEntrySchema>(System.Func<Toscana.ToscaPropertyEntrySchema, Toscana.ToscaPropertyEntrySchema>)
  nameWithType.vb: EnumerableExtensions.FromHierarchy(Of ToscaPropertyEntrySchema)(Func(Of ToscaPropertyEntrySchema, ToscaPropertyEntrySchema))
  fullname.vb: Toscana.Common.EnumerableExtensions.FromHierarchy(Of Toscana.ToscaPropertyEntrySchema)(System.Func(Of Toscana.ToscaPropertyEntrySchema, Toscana.ToscaPropertyEntrySchema))
  name.vb: FromHierarchy(Of ToscaPropertyEntrySchema)(Func(Of ToscaPropertyEntrySchema, ToscaPropertyEntrySchema))
  spec.csharp:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{``0,``0})
    name: FromHierarchy<ToscaPropertyEntrySchema>
    nameWithType: EnumerableExtensions.FromHierarchy<ToscaPropertyEntrySchema>
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<Toscana.ToscaPropertyEntrySchema>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Toscana.ToscaPropertyEntrySchema
    name: ToscaPropertyEntrySchema
    nameWithType: ToscaPropertyEntrySchema
    fullName: Toscana.ToscaPropertyEntrySchema
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Toscana.ToscaPropertyEntrySchema
    name: ToscaPropertyEntrySchema
    nameWithType: ToscaPropertyEntrySchema
    fullName: Toscana.ToscaPropertyEntrySchema
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{``0,``0})
    name: FromHierarchy(Of ToscaPropertyEntrySchema)
    nameWithType: EnumerableExtensions.FromHierarchy(Of ToscaPropertyEntrySchema)
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy(Of Toscana.ToscaPropertyEntrySchema)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Toscana.ToscaPropertyEntrySchema
    name: ToscaPropertyEntrySchema
    nameWithType: ToscaPropertyEntrySchema
    fullName: Toscana.ToscaPropertyEntrySchema
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Toscana.ToscaPropertyEntrySchema
    name: ToscaPropertyEntrySchema
    nameWithType: ToscaPropertyEntrySchema
    fullName: Toscana.ToscaPropertyEntrySchema
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
  commentId: M:Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: FromHierarchy<TSource>(TSource, Func<TSource, TSource>, Func<TSource, Boolean>)
  nameWithType: EnumerableExtensions.FromHierarchy<TSource>(TSource, Func<TSource, TSource>, Func<TSource, Boolean>)
  fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<TSource>(TSource, System.Func<TSource, TSource>, System.Func<TSource, System.Boolean>)
  nameWithType.vb: EnumerableExtensions.FromHierarchy(Of TSource)(TSource, Func(Of TSource, TSource), Func(Of TSource, Boolean))
  fullname.vb: Toscana.Common.EnumerableExtensions.FromHierarchy(Of TSource)(TSource, System.Func(Of TSource, TSource), System.Func(Of TSource, System.Boolean))
  name.vb: FromHierarchy(Of TSource)(TSource, Func(Of TSource, TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
    name: FromHierarchy<TSource>
    nameWithType: EnumerableExtensions.FromHierarchy<TSource>
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
    name: FromHierarchy(Of TSource)
    nameWithType: EnumerableExtensions.FromHierarchy(Of TSource)
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Toscana.Common.EnumerableExtensions
  commentId: T:Toscana.Common.EnumerableExtensions
  parent: Toscana.Common
  isExternal: false
  name: EnumerableExtensions
  nameWithType: EnumerableExtensions
  fullName: Toscana.Common.EnumerableExtensions
- uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
  commentId: M:Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
  isExternal: true
  name: FromHierarchy<TSource>(TSource, Func<TSource, TSource>)
  nameWithType: EnumerableExtensions.FromHierarchy<TSource>(TSource, Func<TSource, TSource>)
  fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<TSource>(TSource, System.Func<TSource, TSource>)
  nameWithType.vb: EnumerableExtensions.FromHierarchy(Of TSource)(TSource, Func(Of TSource, TSource))
  fullname.vb: Toscana.Common.EnumerableExtensions.FromHierarchy(Of TSource)(TSource, System.Func(Of TSource, TSource))
  name.vb: FromHierarchy(Of TSource)(TSource, Func(Of TSource, TSource))
  spec.csharp:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
    name: FromHierarchy<TSource>
    nameWithType: EnumerableExtensions.FromHierarchy<TSource>
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
    name: FromHierarchy(Of TSource)
    nameWithType: EnumerableExtensions.FromHierarchy(Of TSource)
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Toscana.Common
  commentId: N:Toscana.Common
  isExternal: false
  name: Toscana.Common
  nameWithType: Toscana.Common
  fullName: Toscana.Common
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.Object}}
  commentId: T:System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.Object}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Dictionary<String, Object>>
  nameWithType: List<Dictionary<String, Object>>
  fullName: System.Collections.Generic.List<System.Collections.Generic.Dictionary<System.String, System.Object>>
  nameWithType.vb: List(Of Dictionary(Of String, Object))
  fullname.vb: System.Collections.Generic.List(Of System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: List(Of Dictionary(Of String, Object))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Toscana.ToscaPropertyEntrySchema
  commentId: T:Toscana.ToscaPropertyEntrySchema
  parent: Toscana
  isExternal: false
  name: ToscaPropertyEntrySchema
  nameWithType: ToscaPropertyEntrySchema
  fullName: Toscana.ToscaPropertyEntrySchema
