### YamlMime:ManagedReference
items:
- uid: Toscana.ToscaPropertyDefinition
  commentId: T:Toscana.ToscaPropertyDefinition
  id: ToscaPropertyDefinition
  parent: Toscana
  children:
  - Toscana.ToscaPropertyDefinition.#ctor
  - Toscana.ToscaPropertyDefinition.AddConstraint(System.String,System.Object)
  - Toscana.ToscaPropertyDefinition.Constraints
  - Toscana.ToscaPropertyDefinition.Default
  - Toscana.ToscaPropertyDefinition.Description
  - Toscana.ToscaPropertyDefinition.EntrySchema
  - Toscana.ToscaPropertyDefinition.Required
  - Toscana.ToscaPropertyDefinition.Status
  - Toscana.ToscaPropertyDefinition.StringValue
  - Toscana.ToscaPropertyDefinition.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)
  - Toscana.ToscaPropertyDefinition.Tags
  - Toscana.ToscaPropertyDefinition.Type
  langs:
  - csharp
  - vb
  name: ToscaPropertyDefinition
  nameWithType: ToscaPropertyDefinition
  fullName: Toscana.ToscaPropertyDefinition
  type: Class
  source:
    remote:
      path: Toscana/ToscaPropertyDefinition.cs
      branch: develop
      repo: https://github.com/QualiSystems/Toscana.git
    id: ToscaPropertyDefinition
    path: Toscana/ToscaPropertyDefinition.cs
    startLine: 16
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\n    A property definition defines a named, typed value and related data that\n    can be associated with an entity defined in this specification (e.g., Node Types,\n    Relationship Types, Capability Types, etc.).\n    Properties are used by template authors to provide input values to TOSCA entities which\n    indicate their “desired state” when they are instantiated.  The value of a property can be\n    retrieved using the get_property function within TOSCA Service Templates.\n"
  example: []
  syntax:
    content: 'public class ToscaPropertyDefinition : IValidatableObject'
    content.vb: >-
      Public Class ToscaPropertyDefinition
          Implements IValidatableObject
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.DataAnnotations.IValidatableObject
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Toscana.ToscaPropertyDefinition.Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{Toscana.ToscaPropertyDefinition,Toscana.ToscaPropertyDefinition},System.Func{Toscana.ToscaPropertyDefinition,System.Boolean})
  - Toscana.ToscaPropertyDefinition.Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{Toscana.ToscaPropertyDefinition,Toscana.ToscaPropertyDefinition})
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Toscana.ToscaPropertyDefinition.#ctor
  commentId: M:Toscana.ToscaPropertyDefinition.#ctor
  id: '#ctor'
  parent: Toscana.ToscaPropertyDefinition
  langs:
  - csharp
  - vb
  name: ToscaPropertyDefinition()
  nameWithType: ToscaPropertyDefinition.ToscaPropertyDefinition()
  fullName: Toscana.ToscaPropertyDefinition.ToscaPropertyDefinition()
  type: Constructor
  source:
    remote:
      path: Toscana/ToscaPropertyDefinition.cs
      branch: develop
      repo: https://github.com/QualiSystems/Toscana.git
    id: .ctor
    path: Toscana/ToscaPropertyDefinition.cs
    startLine: 23
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\n    Initializes an instance of ToscaPropertyDefinition\n"
  example: []
  syntax:
    content: public ToscaPropertyDefinition()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Toscana.ToscaPropertyDefinition.Type
  commentId: P:Toscana.ToscaPropertyDefinition.Type
  id: Type
  parent: Toscana.ToscaPropertyDefinition
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: ToscaPropertyDefinition.Type
  fullName: Toscana.ToscaPropertyDefinition.Type
  type: Property
  source:
    remote:
      path: Toscana/ToscaPropertyDefinition.cs
      branch: develop
      repo: https://github.com/QualiSystems/Toscana.git
    id: Type
    path: Toscana/ToscaPropertyDefinition.cs
    startLine: 32
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\n    The required data type for the property.\n"
  example: []
  syntax:
    content: >-
      [Required(ErrorMessage = "type is required on property", AllowEmptyStrings = false)]

      public string Type { get; set; }
    content.vb: >-
      <Required(ErrorMessage:="type is required on property", AllowEmptyStrings:=False)>

      Public Property Type As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: type is required on property
    - name: AllowEmptyStrings
      type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Toscana.ToscaPropertyDefinition.Description
  commentId: P:Toscana.ToscaPropertyDefinition.Description
  id: Description
  parent: Toscana.ToscaPropertyDefinition
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: ToscaPropertyDefinition.Description
  fullName: Toscana.ToscaPropertyDefinition.Description
  type: Property
  source:
    remote:
      path: Toscana/ToscaPropertyDefinition.cs
      branch: develop
      repo: https://github.com/QualiSystems/Toscana.git
    id: Description
    path: Toscana/ToscaPropertyDefinition.cs
    startLine: 38
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\n    The optional description for the property.\n"
  example: []
  syntax:
    content: public string Description { get; set; }
    content.vb: Public Property Description As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Toscana.ToscaPropertyDefinition.Required
  commentId: P:Toscana.ToscaPropertyDefinition.Required
  id: Required
  parent: Toscana.ToscaPropertyDefinition
  langs:
  - csharp
  - vb
  name: Required
  nameWithType: ToscaPropertyDefinition.Required
  fullName: Toscana.ToscaPropertyDefinition.Required
  type: Property
  source:
    remote:
      path: Toscana/ToscaPropertyDefinition.cs
      branch: develop
      repo: https://github.com/QualiSystems/Toscana.git
    id: Required
    path: Toscana/ToscaPropertyDefinition.cs
    startLine: 43
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\n    An optional key that declares a property as required (true) or not (false).\n"
  example: []
  syntax:
    content: public bool Required { get; set; }
    content.vb: Public Property Required As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Toscana.ToscaPropertyDefinition.Default
  commentId: P:Toscana.ToscaPropertyDefinition.Default
  id: Default
  parent: Toscana.ToscaPropertyDefinition
  langs:
  - csharp
  - vb
  name: Default
  nameWithType: ToscaPropertyDefinition.Default
  fullName: Toscana.ToscaPropertyDefinition.Default
  type: Property
  source:
    remote:
      path: Toscana/ToscaPropertyDefinition.cs
      branch: develop
      repo: https://github.com/QualiSystems/Toscana.git
    id: Default
    path: Toscana/ToscaPropertyDefinition.cs
    startLine: 48
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\n    An optional key that may provide a value to be used as a default if not provided by another means.\n"
  example: []
  syntax:
    content: public object Default { get; set; }
    content.vb: Public Property Default As Object
    parameters: []
    return:
      type: System.Object
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Toscana.ToscaPropertyDefinition.Status
  commentId: P:Toscana.ToscaPropertyDefinition.Status
  id: Status
  parent: Toscana.ToscaPropertyDefinition
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: ToscaPropertyDefinition.Status
  fullName: Toscana.ToscaPropertyDefinition.Status
  type: Property
  source:
    remote:
      path: Toscana/ToscaPropertyDefinition.cs
      branch: develop
      repo: https://github.com/QualiSystems/Toscana.git
    id: Status
    path: Toscana/ToscaPropertyDefinition.cs
    startLine: 53
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\n    The optional status of the property relative to the specification or implementation.\n"
  example: []
  syntax:
    content: public ToscaPropertyStatus Status { get; set; }
    content.vb: Public Property Status As ToscaPropertyStatus
    parameters: []
    return:
      type: Toscana.ToscaPropertyStatus
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Toscana.ToscaPropertyDefinition.Constraints
  commentId: P:Toscana.ToscaPropertyDefinition.Constraints
  id: Constraints
  parent: Toscana.ToscaPropertyDefinition
  langs:
  - csharp
  - vb
  name: Constraints
  nameWithType: ToscaPropertyDefinition.Constraints
  fullName: Toscana.ToscaPropertyDefinition.Constraints
  type: Property
  source:
    remote:
      path: Toscana/ToscaPropertyDefinition.cs
      branch: develop
      repo: https://github.com/QualiSystems/Toscana.git
    id: Constraints
    path: Toscana/ToscaPropertyDefinition.cs
    startLine: 58
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\n    The optional list of sequenced constraint clauses for the property.\n"
  example: []
  syntax:
    content: public List<Dictionary<string, object>> Constraints { get; set; }
    content.vb: Public Property Constraints As List(Of Dictionary(Of String, Object))
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.Object}}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Toscana.ToscaPropertyDefinition.EntrySchema
  commentId: P:Toscana.ToscaPropertyDefinition.EntrySchema
  id: EntrySchema
  parent: Toscana.ToscaPropertyDefinition
  langs:
  - csharp
  - vb
  name: EntrySchema
  nameWithType: ToscaPropertyDefinition.EntrySchema
  fullName: Toscana.ToscaPropertyDefinition.EntrySchema
  type: Property
  source:
    remote:
      path: Toscana/ToscaPropertyDefinition.cs
      branch: develop
      repo: https://github.com/QualiSystems/Toscana.git
    id: EntrySchema
    path: Toscana/ToscaPropertyDefinition.cs
    startLine: 64
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\n    The optional key that is used to declare the name of the Datatype definition for entries of set types such as the\n    TOSCA list or map.\n"
  example: []
  syntax:
    content: public ToscaPropertyEntrySchema EntrySchema { get; set; }
    content.vb: Public Property EntrySchema As ToscaPropertyEntrySchema
    parameters: []
    return:
      type: Toscana.ToscaPropertyEntrySchema
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Toscana.ToscaPropertyDefinition.Tags
  commentId: P:Toscana.ToscaPropertyDefinition.Tags
  id: Tags
  parent: Toscana.ToscaPropertyDefinition
  langs:
  - csharp
  - vb
  name: Tags
  nameWithType: ToscaPropertyDefinition.Tags
  fullName: Toscana.ToscaPropertyDefinition.Tags
  type: Property
  source:
    remote:
      path: Toscana/ToscaPropertyDefinition.cs
      branch: develop
      repo: https://github.com/QualiSystems/Toscana.git
    id: Tags
    path: Toscana/ToscaPropertyDefinition.cs
    startLine: 69
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\n    The optional list of tags\n"
  example: []
  syntax:
    content: public List<string> Tags { get; set; }
    content.vb: Public Property Tags As List(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Toscana.ToscaPropertyDefinition.StringValue
  commentId: P:Toscana.ToscaPropertyDefinition.StringValue
  id: StringValue
  parent: Toscana.ToscaPropertyDefinition
  langs:
  - csharp
  - vb
  name: StringValue
  nameWithType: ToscaPropertyDefinition.StringValue
  fullName: Toscana.ToscaPropertyDefinition.StringValue
  type: Property
  source:
    remote:
      path: Toscana/ToscaPropertyDefinition.cs
      branch: develop
      repo: https://github.com/QualiSystems/Toscana.git
    id: StringValue
    path: Toscana/ToscaPropertyDefinition.cs
    startLine: 75
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\n    String representation of Default property.\n    Returns empty string when default is null\n"
  example: []
  syntax:
    content: >-
      [YamlIgnore]

      public string StringValue { get; }
    content.vb: >-
      <YamlIgnore>

      Public ReadOnly Property StringValue As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: YamlDotNet.Serialization.YamlIgnoreAttribute
    ctor: YamlDotNet.Serialization.YamlIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Toscana.ToscaPropertyDefinition.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)
  commentId: M:Toscana.ToscaPropertyDefinition.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)
  id: System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)
  isEii: true
  parent: Toscana.ToscaPropertyDefinition
  langs:
  - csharp
  - vb
  name: IValidatableObject.Validate(ValidationContext)
  nameWithType: ToscaPropertyDefinition.IValidatableObject.Validate(ValidationContext)
  fullName: Toscana.ToscaPropertyDefinition.System.ComponentModel.DataAnnotations.IValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext)
  type: Method
  source:
    remote:
      path: Toscana/ToscaPropertyDefinition.cs
      branch: develop
      repo: https://github.com/QualiSystems/Toscana.git
    id: System.ComponentModel.DataAnnotations.IValidatableObject.Validate
    path: Toscana/ToscaPropertyDefinition.cs
    startLine: 81
  assemblies:
  - Toscana
  namespace: Toscana
  syntax:
    content: IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
    content.vb: Function System.ComponentModel.DataAnnotations.IValidatableObject.Validate(validationContext As ValidationContext) As IEnumerable(Of ValidationResult) Implements IValidatableObject.Validate
    parameters:
    - id: validationContext
      type: System.ComponentModel.DataAnnotations.ValidationContext
    return:
      type: System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationResult}
  implements:
  - System.ComponentModel.DataAnnotations.IValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext)
  nameWithType.vb: ToscaPropertyDefinition.System.ComponentModel.DataAnnotations.IValidatableObject.Validate(ValidationContext)
  name.vb: System.ComponentModel.DataAnnotations.IValidatableObject.Validate(ValidationContext)
- uid: Toscana.ToscaPropertyDefinition.AddConstraint(System.String,System.Object)
  commentId: M:Toscana.ToscaPropertyDefinition.AddConstraint(System.String,System.Object)
  id: AddConstraint(System.String,System.Object)
  parent: Toscana.ToscaPropertyDefinition
  langs:
  - csharp
  - vb
  name: AddConstraint(String, Object)
  nameWithType: ToscaPropertyDefinition.AddConstraint(String, Object)
  fullName: Toscana.ToscaPropertyDefinition.AddConstraint(System.String, System.Object)
  type: Method
  source:
    remote:
      path: Toscana/ToscaPropertyDefinition.cs
      branch: develop
      repo: https://github.com/QualiSystems/Toscana.git
    id: AddConstraint
    path: Toscana/ToscaPropertyDefinition.cs
    startLine: 117
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nAdds a constraint to the property definition\n"
  example: []
  syntax:
    content: public void AddConstraint(string contraintName, object constraintValue)
    content.vb: Public Sub AddConstraint(contraintName As String, constraintValue As Object)
    parameters:
    - id: contraintName
      type: System.String
      description: Constraint name, like greater_or_equal, valid_values
    - id: constraintValue
      type: System.Object
      description: Constraint values
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Toscana
  commentId: N:Toscana
  isExternal: false
  name: Toscana
  nameWithType: Toscana
  fullName: Toscana
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.DataAnnotations.IValidatableObject
  commentId: T:System.ComponentModel.DataAnnotations.IValidatableObject
  parent: System.ComponentModel.DataAnnotations
  isExternal: true
  name: IValidatableObject
  nameWithType: IValidatableObject
  fullName: System.ComponentModel.DataAnnotations.IValidatableObject
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Toscana.ToscaPropertyDefinition.Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{Toscana.ToscaPropertyDefinition,Toscana.ToscaPropertyDefinition},System.Func{Toscana.ToscaPropertyDefinition,System.Boolean})
  commentId: M:Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
  parent: Toscana.Common.EnumerableExtensions
  definition: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
  name: FromHierarchy<ToscaPropertyDefinition>(Func<ToscaPropertyDefinition, ToscaPropertyDefinition>, Func<ToscaPropertyDefinition, Boolean>)
  nameWithType: EnumerableExtensions.FromHierarchy<ToscaPropertyDefinition>(Func<ToscaPropertyDefinition, ToscaPropertyDefinition>, Func<ToscaPropertyDefinition, Boolean>)
  fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<Toscana.ToscaPropertyDefinition>(System.Func<Toscana.ToscaPropertyDefinition, Toscana.ToscaPropertyDefinition>, System.Func<Toscana.ToscaPropertyDefinition, System.Boolean>)
  nameWithType.vb: EnumerableExtensions.FromHierarchy(Of ToscaPropertyDefinition)(Func(Of ToscaPropertyDefinition, ToscaPropertyDefinition), Func(Of ToscaPropertyDefinition, Boolean))
  fullname.vb: Toscana.Common.EnumerableExtensions.FromHierarchy(Of Toscana.ToscaPropertyDefinition)(System.Func(Of Toscana.ToscaPropertyDefinition, Toscana.ToscaPropertyDefinition), System.Func(Of Toscana.ToscaPropertyDefinition, System.Boolean))
  name.vb: FromHierarchy(Of ToscaPropertyDefinition)(Func(Of ToscaPropertyDefinition, ToscaPropertyDefinition), Func(Of ToscaPropertyDefinition, Boolean))
  spec.csharp:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{``0,``0},System.Func{``0,System.Boolean})
    name: FromHierarchy<ToscaPropertyDefinition>
    nameWithType: EnumerableExtensions.FromHierarchy<ToscaPropertyDefinition>
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<Toscana.ToscaPropertyDefinition>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Toscana.ToscaPropertyDefinition
    name: ToscaPropertyDefinition
    nameWithType: ToscaPropertyDefinition
    fullName: Toscana.ToscaPropertyDefinition
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Toscana.ToscaPropertyDefinition
    name: ToscaPropertyDefinition
    nameWithType: ToscaPropertyDefinition
    fullName: Toscana.ToscaPropertyDefinition
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Toscana.ToscaPropertyDefinition
    name: ToscaPropertyDefinition
    nameWithType: ToscaPropertyDefinition
    fullName: Toscana.ToscaPropertyDefinition
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{``0,``0},System.Func{``0,System.Boolean})
    name: FromHierarchy(Of ToscaPropertyDefinition)
    nameWithType: EnumerableExtensions.FromHierarchy(Of ToscaPropertyDefinition)
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy(Of Toscana.ToscaPropertyDefinition)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Toscana.ToscaPropertyDefinition
    name: ToscaPropertyDefinition
    nameWithType: ToscaPropertyDefinition
    fullName: Toscana.ToscaPropertyDefinition
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Toscana.ToscaPropertyDefinition
    name: ToscaPropertyDefinition
    nameWithType: ToscaPropertyDefinition
    fullName: Toscana.ToscaPropertyDefinition
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Toscana.ToscaPropertyDefinition
    name: ToscaPropertyDefinition
    nameWithType: ToscaPropertyDefinition
    fullName: Toscana.ToscaPropertyDefinition
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Toscana.ToscaPropertyDefinition.Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{Toscana.ToscaPropertyDefinition,Toscana.ToscaPropertyDefinition})
  commentId: M:Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
  parent: Toscana.Common.EnumerableExtensions
  definition: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
  name: FromHierarchy<ToscaPropertyDefinition>(Func<ToscaPropertyDefinition, ToscaPropertyDefinition>)
  nameWithType: EnumerableExtensions.FromHierarchy<ToscaPropertyDefinition>(Func<ToscaPropertyDefinition, ToscaPropertyDefinition>)
  fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<Toscana.ToscaPropertyDefinition>(System.Func<Toscana.ToscaPropertyDefinition, Toscana.ToscaPropertyDefinition>)
  nameWithType.vb: EnumerableExtensions.FromHierarchy(Of ToscaPropertyDefinition)(Func(Of ToscaPropertyDefinition, ToscaPropertyDefinition))
  fullname.vb: Toscana.Common.EnumerableExtensions.FromHierarchy(Of Toscana.ToscaPropertyDefinition)(System.Func(Of Toscana.ToscaPropertyDefinition, Toscana.ToscaPropertyDefinition))
  name.vb: FromHierarchy(Of ToscaPropertyDefinition)(Func(Of ToscaPropertyDefinition, ToscaPropertyDefinition))
  spec.csharp:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{``0,``0})
    name: FromHierarchy<ToscaPropertyDefinition>
    nameWithType: EnumerableExtensions.FromHierarchy<ToscaPropertyDefinition>
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<Toscana.ToscaPropertyDefinition>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Toscana.ToscaPropertyDefinition
    name: ToscaPropertyDefinition
    nameWithType: ToscaPropertyDefinition
    fullName: Toscana.ToscaPropertyDefinition
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Toscana.ToscaPropertyDefinition
    name: ToscaPropertyDefinition
    nameWithType: ToscaPropertyDefinition
    fullName: Toscana.ToscaPropertyDefinition
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{``0,``0})
    name: FromHierarchy(Of ToscaPropertyDefinition)
    nameWithType: EnumerableExtensions.FromHierarchy(Of ToscaPropertyDefinition)
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy(Of Toscana.ToscaPropertyDefinition)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Toscana.ToscaPropertyDefinition
    name: ToscaPropertyDefinition
    nameWithType: ToscaPropertyDefinition
    fullName: Toscana.ToscaPropertyDefinition
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Toscana.ToscaPropertyDefinition
    name: ToscaPropertyDefinition
    nameWithType: ToscaPropertyDefinition
    fullName: Toscana.ToscaPropertyDefinition
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.ComponentModel.DataAnnotations
  commentId: N:System.ComponentModel.DataAnnotations
  isExternal: false
  name: System.ComponentModel.DataAnnotations
  nameWithType: System.ComponentModel.DataAnnotations
  fullName: System.ComponentModel.DataAnnotations
- uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
  commentId: M:Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: FromHierarchy<TSource>(TSource, Func<TSource, TSource>, Func<TSource, Boolean>)
  nameWithType: EnumerableExtensions.FromHierarchy<TSource>(TSource, Func<TSource, TSource>, Func<TSource, Boolean>)
  fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<TSource>(TSource, System.Func<TSource, TSource>, System.Func<TSource, System.Boolean>)
  nameWithType.vb: EnumerableExtensions.FromHierarchy(Of TSource)(TSource, Func(Of TSource, TSource), Func(Of TSource, Boolean))
  fullname.vb: Toscana.Common.EnumerableExtensions.FromHierarchy(Of TSource)(TSource, System.Func(Of TSource, TSource), System.Func(Of TSource, System.Boolean))
  name.vb: FromHierarchy(Of TSource)(TSource, Func(Of TSource, TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
    name: FromHierarchy<TSource>
    nameWithType: EnumerableExtensions.FromHierarchy<TSource>
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
    name: FromHierarchy(Of TSource)
    nameWithType: EnumerableExtensions.FromHierarchy(Of TSource)
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Toscana.Common.EnumerableExtensions
  commentId: T:Toscana.Common.EnumerableExtensions
  parent: Toscana.Common
  isExternal: false
  name: EnumerableExtensions
  nameWithType: EnumerableExtensions
  fullName: Toscana.Common.EnumerableExtensions
- uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
  commentId: M:Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
  isExternal: true
  name: FromHierarchy<TSource>(TSource, Func<TSource, TSource>)
  nameWithType: EnumerableExtensions.FromHierarchy<TSource>(TSource, Func<TSource, TSource>)
  fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<TSource>(TSource, System.Func<TSource, TSource>)
  nameWithType.vb: EnumerableExtensions.FromHierarchy(Of TSource)(TSource, Func(Of TSource, TSource))
  fullname.vb: Toscana.Common.EnumerableExtensions.FromHierarchy(Of TSource)(TSource, System.Func(Of TSource, TSource))
  name.vb: FromHierarchy(Of TSource)(TSource, Func(Of TSource, TSource))
  spec.csharp:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
    name: FromHierarchy<TSource>
    nameWithType: EnumerableExtensions.FromHierarchy<TSource>
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
    name: FromHierarchy(Of TSource)
    nameWithType: EnumerableExtensions.FromHierarchy(Of TSource)
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Toscana.Common
  commentId: N:Toscana.Common
  isExternal: false
  name: Toscana.Common
  nameWithType: Toscana.Common
  fullName: Toscana.Common
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Toscana.ToscaPropertyStatus
  commentId: T:Toscana.ToscaPropertyStatus
  parent: Toscana
  isExternal: false
  name: ToscaPropertyStatus
  nameWithType: ToscaPropertyStatus
  fullName: Toscana.ToscaPropertyStatus
- uid: System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.Object}}
  commentId: T:System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.Object}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Dictionary<String, Object>>
  nameWithType: List<Dictionary<String, Object>>
  fullName: System.Collections.Generic.List<System.Collections.Generic.Dictionary<System.String, System.Object>>
  nameWithType.vb: List(Of Dictionary(Of String, Object))
  fullname.vb: System.Collections.Generic.List(Of System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: List(Of Dictionary(Of String, Object))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Toscana.ToscaPropertyEntrySchema
  commentId: T:Toscana.ToscaPropertyEntrySchema
  parent: Toscana
  isExternal: false
  name: ToscaPropertyEntrySchema
  nameWithType: ToscaPropertyEntrySchema
  fullName: Toscana.ToscaPropertyEntrySchema
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullname.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.DataAnnotations.IValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext)
  commentId: M:System.ComponentModel.DataAnnotations.IValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext)
  parent: System.ComponentModel.DataAnnotations.IValidatableObject
  isExternal: true
  name: Validate(ValidationContext)
  nameWithType: IValidatableObject.Validate(ValidationContext)
  fullName: System.ComponentModel.DataAnnotations.IValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext)
  spec.csharp:
  - uid: System.ComponentModel.DataAnnotations.IValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext)
    name: Validate
    nameWithType: IValidatableObject.Validate
    fullName: System.ComponentModel.DataAnnotations.IValidatableObject.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.DataAnnotations.ValidationContext
    name: ValidationContext
    nameWithType: ValidationContext
    fullName: System.ComponentModel.DataAnnotations.ValidationContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.DataAnnotations.IValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext)
    name: Validate
    nameWithType: IValidatableObject.Validate
    fullName: System.ComponentModel.DataAnnotations.IValidatableObject.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.DataAnnotations.ValidationContext
    name: ValidationContext
    nameWithType: ValidationContext
    fullName: System.ComponentModel.DataAnnotations.ValidationContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.DataAnnotations.ValidationContext
  commentId: T:System.ComponentModel.DataAnnotations.ValidationContext
  parent: System.ComponentModel.DataAnnotations
  isExternal: true
  name: ValidationContext
  nameWithType: ValidationContext
  fullName: System.ComponentModel.DataAnnotations.ValidationContext
- uid: System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationResult}
  commentId: T:System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationResult}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ValidationResult>
  nameWithType: IEnumerable<ValidationResult>
  fullName: System.Collections.Generic.IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult>
  nameWithType.vb: IEnumerable(Of ValidationResult)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.ComponentModel.DataAnnotations.ValidationResult)
  name.vb: IEnumerable(Of ValidationResult)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.DataAnnotations.ValidationResult
    name: ValidationResult
    nameWithType: ValidationResult
    fullName: System.ComponentModel.DataAnnotations.ValidationResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ComponentModel.DataAnnotations.ValidationResult
    name: ValidationResult
    nameWithType: ValidationResult
    fullName: System.ComponentModel.DataAnnotations.ValidationResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
