### YamlMime:ManagedReference
items:
- uid: Toscana.ToscaArtifact
  commentId: T:Toscana.ToscaArtifact
  id: ToscaArtifact
  parent: Toscana
  children:
  - Toscana.ToscaArtifact.DeployPath
  - Toscana.ToscaArtifact.Description
  - Toscana.ToscaArtifact.File
  - Toscana.ToscaArtifact.Repository
  - Toscana.ToscaArtifact.Type
  langs:
  - csharp
  - vb
  name: ToscaArtifact
  nameWithType: ToscaArtifact
  fullName: Toscana.ToscaArtifact
  type: Class
  source:
    remote:
      path: Toscana/ToscaArtifact.cs
      branch: feature/borismod_loop
      repo: https://github.com/QualiSystems/Toscana.git
    id: ToscaArtifact
    path: Toscana/ToscaArtifact.cs
    startLine: 8
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nAn artifact definition defines a named, typed file that can be associated with Node Type or Node Template \nand used by orchestration engine to facilitate deployment and implementation of interface operations.\n"
  example: []
  syntax:
    content: public class ToscaArtifact
    content.vb: Public Class ToscaArtifact
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Toscana.ToscaArtifact.Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{Toscana.ToscaArtifact,Toscana.ToscaArtifact},System.Func{Toscana.ToscaArtifact,System.Boolean})
  - Toscana.ToscaArtifact.Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{Toscana.ToscaArtifact,Toscana.ToscaArtifact})
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Toscana.ToscaArtifact.Type
  commentId: P:Toscana.ToscaArtifact.Type
  id: Type
  parent: Toscana.ToscaArtifact
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: ToscaArtifact.Type
  fullName: Toscana.ToscaArtifact.Type
  type: Property
  source:
    remote:
      path: Toscana/ToscaArtifact.cs
      branch: feature/borismod_loop
      repo: https://github.com/QualiSystems/Toscana.git
    id: Type
    path: Toscana/ToscaArtifact.cs
    startLine: 13
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nThe required artifact type for the artifact definition.\n"
  example: []
  syntax:
    content: >-
      [Required(ErrorMessage = "type is required on artifact")]

      public string Type { get; set; }
    content.vb: >-
      <Required(ErrorMessage:="type is required on artifact")>

      Public Property Type As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: type is required on artifact
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Toscana.ToscaArtifact.File
  commentId: P:Toscana.ToscaArtifact.File
  id: File
  parent: Toscana.ToscaArtifact
  langs:
  - csharp
  - vb
  name: File
  nameWithType: ToscaArtifact.File
  fullName: Toscana.ToscaArtifact.File
  type: Property
  source:
    remote:
      path: Toscana/ToscaArtifact.cs
      branch: feature/borismod_loop
      repo: https://github.com/QualiSystems/Toscana.git
    id: File
    path: Toscana/ToscaArtifact.cs
    startLine: 19
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nThe required URI string (relative or absolute) which can be used to locate the artifact’s file.\n"
  example: []
  syntax:
    content: >-
      [Required(ErrorMessage = "file is required on artifact")]

      public string File { get; set; }
    content.vb: >-
      <Required(ErrorMessage:="file is required on artifact")>

      Public Property File As String
    parameters: []
    return:
      type: System.String
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: file is required on artifact
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Toscana.ToscaArtifact.Repository
  commentId: P:Toscana.ToscaArtifact.Repository
  id: Repository
  parent: Toscana.ToscaArtifact
  langs:
  - csharp
  - vb
  name: Repository
  nameWithType: ToscaArtifact.Repository
  fullName: Toscana.ToscaArtifact.Repository
  type: Property
  source:
    remote:
      path: Toscana/ToscaArtifact.cs
      branch: feature/borismod_loop
      repo: https://github.com/QualiSystems/Toscana.git
    id: Repository
    path: Toscana/ToscaArtifact.cs
    startLine: 26
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nThe optional name of the repository definition which contains the location of the external repository that contains the artifact.  \nThe artifact is expected to be referenceable by its file URI within the repository.\n"
  example: []
  syntax:
    content: public string Repository { get; set; }
    content.vb: Public Property Repository As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Toscana.ToscaArtifact.Description
  commentId: P:Toscana.ToscaArtifact.Description
  id: Description
  parent: Toscana.ToscaArtifact
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: ToscaArtifact.Description
  fullName: Toscana.ToscaArtifact.Description
  type: Property
  source:
    remote:
      path: Toscana/ToscaArtifact.cs
      branch: feature/borismod_loop
      repo: https://github.com/QualiSystems/Toscana.git
    id: Description
    path: Toscana/ToscaArtifact.cs
    startLine: 31
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nThe optional description for the artifact definition.\n"
  example: []
  syntax:
    content: public string Description { get; set; }
    content.vb: Public Property Description As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Toscana.ToscaArtifact.DeployPath
  commentId: P:Toscana.ToscaArtifact.DeployPath
  id: DeployPath
  parent: Toscana.ToscaArtifact
  langs:
  - csharp
  - vb
  name: DeployPath
  nameWithType: ToscaArtifact.DeployPath
  fullName: Toscana.ToscaArtifact.DeployPath
  type: Property
  source:
    remote:
      path: Toscana/ToscaArtifact.cs
      branch: feature/borismod_loop
      repo: https://github.com/QualiSystems/Toscana.git
    id: DeployPath
    path: Toscana/ToscaArtifact.cs
    startLine: 36
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nThe file path the associated file would be deployed into within the target node’s container.\n"
  example: []
  syntax:
    content: public string DeployPath { get; set; }
    content.vb: Public Property DeployPath As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Toscana
  commentId: N:Toscana
  isExternal: false
  name: Toscana
  nameWithType: Toscana
  fullName: Toscana
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Toscana.ToscaArtifact.Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{Toscana.ToscaArtifact,Toscana.ToscaArtifact},System.Func{Toscana.ToscaArtifact,System.Boolean})
  commentId: M:Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
  parent: Toscana.Common.EnumerableExtensions
  definition: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
  name: FromHierarchy<ToscaArtifact>(Func<ToscaArtifact, ToscaArtifact>, Func<ToscaArtifact, Boolean>)
  nameWithType: EnumerableExtensions.FromHierarchy<ToscaArtifact>(Func<ToscaArtifact, ToscaArtifact>, Func<ToscaArtifact, Boolean>)
  fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<Toscana.ToscaArtifact>(System.Func<Toscana.ToscaArtifact, Toscana.ToscaArtifact>, System.Func<Toscana.ToscaArtifact, System.Boolean>)
  nameWithType.vb: EnumerableExtensions.FromHierarchy(Of ToscaArtifact)(Func(Of ToscaArtifact, ToscaArtifact), Func(Of ToscaArtifact, Boolean))
  fullname.vb: Toscana.Common.EnumerableExtensions.FromHierarchy(Of Toscana.ToscaArtifact)(System.Func(Of Toscana.ToscaArtifact, Toscana.ToscaArtifact), System.Func(Of Toscana.ToscaArtifact, System.Boolean))
  name.vb: FromHierarchy(Of ToscaArtifact)(Func(Of ToscaArtifact, ToscaArtifact), Func(Of ToscaArtifact, Boolean))
  spec.csharp:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{``0,``0},System.Func{``0,System.Boolean})
    name: FromHierarchy<ToscaArtifact>
    nameWithType: EnumerableExtensions.FromHierarchy<ToscaArtifact>
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<Toscana.ToscaArtifact>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Toscana.ToscaArtifact
    name: ToscaArtifact
    nameWithType: ToscaArtifact
    fullName: Toscana.ToscaArtifact
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Toscana.ToscaArtifact
    name: ToscaArtifact
    nameWithType: ToscaArtifact
    fullName: Toscana.ToscaArtifact
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Toscana.ToscaArtifact
    name: ToscaArtifact
    nameWithType: ToscaArtifact
    fullName: Toscana.ToscaArtifact
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{``0,``0},System.Func{``0,System.Boolean})
    name: FromHierarchy(Of ToscaArtifact)
    nameWithType: EnumerableExtensions.FromHierarchy(Of ToscaArtifact)
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy(Of Toscana.ToscaArtifact)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Toscana.ToscaArtifact
    name: ToscaArtifact
    nameWithType: ToscaArtifact
    fullName: Toscana.ToscaArtifact
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Toscana.ToscaArtifact
    name: ToscaArtifact
    nameWithType: ToscaArtifact
    fullName: Toscana.ToscaArtifact
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Toscana.ToscaArtifact
    name: ToscaArtifact
    nameWithType: ToscaArtifact
    fullName: Toscana.ToscaArtifact
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Toscana.ToscaArtifact.Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{Toscana.ToscaArtifact,Toscana.ToscaArtifact})
  commentId: M:Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
  parent: Toscana.Common.EnumerableExtensions
  definition: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
  name: FromHierarchy<ToscaArtifact>(Func<ToscaArtifact, ToscaArtifact>)
  nameWithType: EnumerableExtensions.FromHierarchy<ToscaArtifact>(Func<ToscaArtifact, ToscaArtifact>)
  fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<Toscana.ToscaArtifact>(System.Func<Toscana.ToscaArtifact, Toscana.ToscaArtifact>)
  nameWithType.vb: EnumerableExtensions.FromHierarchy(Of ToscaArtifact)(Func(Of ToscaArtifact, ToscaArtifact))
  fullname.vb: Toscana.Common.EnumerableExtensions.FromHierarchy(Of Toscana.ToscaArtifact)(System.Func(Of Toscana.ToscaArtifact, Toscana.ToscaArtifact))
  name.vb: FromHierarchy(Of ToscaArtifact)(Func(Of ToscaArtifact, ToscaArtifact))
  spec.csharp:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{``0,``0})
    name: FromHierarchy<ToscaArtifact>
    nameWithType: EnumerableExtensions.FromHierarchy<ToscaArtifact>
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<Toscana.ToscaArtifact>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Toscana.ToscaArtifact
    name: ToscaArtifact
    nameWithType: ToscaArtifact
    fullName: Toscana.ToscaArtifact
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Toscana.ToscaArtifact
    name: ToscaArtifact
    nameWithType: ToscaArtifact
    fullName: Toscana.ToscaArtifact
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{``0,``0})
    name: FromHierarchy(Of ToscaArtifact)
    nameWithType: EnumerableExtensions.FromHierarchy(Of ToscaArtifact)
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy(Of Toscana.ToscaArtifact)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Toscana.ToscaArtifact
    name: ToscaArtifact
    nameWithType: ToscaArtifact
    fullName: Toscana.ToscaArtifact
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Toscana.ToscaArtifact
    name: ToscaArtifact
    nameWithType: ToscaArtifact
    fullName: Toscana.ToscaArtifact
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
  commentId: M:Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: FromHierarchy<TSource>(TSource, Func<TSource, TSource>, Func<TSource, Boolean>)
  nameWithType: EnumerableExtensions.FromHierarchy<TSource>(TSource, Func<TSource, TSource>, Func<TSource, Boolean>)
  fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<TSource>(TSource, System.Func<TSource, TSource>, System.Func<TSource, System.Boolean>)
  nameWithType.vb: EnumerableExtensions.FromHierarchy(Of TSource)(TSource, Func(Of TSource, TSource), Func(Of TSource, Boolean))
  fullname.vb: Toscana.Common.EnumerableExtensions.FromHierarchy(Of TSource)(TSource, System.Func(Of TSource, TSource), System.Func(Of TSource, System.Boolean))
  name.vb: FromHierarchy(Of TSource)(TSource, Func(Of TSource, TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
    name: FromHierarchy<TSource>
    nameWithType: EnumerableExtensions.FromHierarchy<TSource>
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
    name: FromHierarchy(Of TSource)
    nameWithType: EnumerableExtensions.FromHierarchy(Of TSource)
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Toscana.Common.EnumerableExtensions
  commentId: T:Toscana.Common.EnumerableExtensions
  parent: Toscana.Common
  isExternal: false
  name: EnumerableExtensions
  nameWithType: EnumerableExtensions
  fullName: Toscana.Common.EnumerableExtensions
- uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
  commentId: M:Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
  isExternal: true
  name: FromHierarchy<TSource>(TSource, Func<TSource, TSource>)
  nameWithType: EnumerableExtensions.FromHierarchy<TSource>(TSource, Func<TSource, TSource>)
  fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<TSource>(TSource, System.Func<TSource, TSource>)
  nameWithType.vb: EnumerableExtensions.FromHierarchy(Of TSource)(TSource, Func(Of TSource, TSource))
  fullname.vb: Toscana.Common.EnumerableExtensions.FromHierarchy(Of TSource)(TSource, System.Func(Of TSource, TSource))
  name.vb: FromHierarchy(Of TSource)(TSource, Func(Of TSource, TSource))
  spec.csharp:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
    name: FromHierarchy<TSource>
    nameWithType: EnumerableExtensions.FromHierarchy<TSource>
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
    name: FromHierarchy(Of TSource)
    nameWithType: EnumerableExtensions.FromHierarchy(Of TSource)
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Toscana.Common
  commentId: N:Toscana.Common
  isExternal: false
  name: Toscana.Common
  nameWithType: Toscana.Common
  fullName: Toscana.Common
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
