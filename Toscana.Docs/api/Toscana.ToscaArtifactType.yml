### YamlMime:ManagedReference
items:
- uid: Toscana.ToscaArtifactType
  commentId: T:Toscana.ToscaArtifactType
  id: ToscaArtifactType
  parent: Toscana
  children:
  - Toscana.ToscaArtifactType.Base
  - Toscana.ToscaArtifactType.Description
  - Toscana.ToscaArtifactType.FileExt
  - Toscana.ToscaArtifactType.MimeType
  - Toscana.ToscaArtifactType.Properties
  - Toscana.ToscaArtifactType.SetDerivedFromToRoot(System.String)
  - Toscana.ToscaArtifactType.Version
  langs:
  - csharp
  - vb
  name: ToscaArtifactType
  nameWithType: ToscaArtifactType
  fullName: Toscana.ToscaArtifactType
  type: Class
  source:
    remote:
      path: Toscana/ToscaArtifactType.cs
      branch: master
      repo: https://github.com/QualiSystems/Toscana.git
    id: ToscaArtifactType
    path: Toscana/ToscaArtifactType.cs
    startLine: 9
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nAn Artifact Type is a reusable entity that defines the type of one or more files that are used to define implementation or deployment artifacts that are referenced by nodes or relationships on their operations\n"
  example: []
  syntax:
    content: 'public class ToscaArtifactType : ToscaObject<ToscaArtifactType>'
    content.vb: >-
      Public Class ToscaArtifactType
          Inherits ToscaObject(Of ToscaArtifactType)
  inheritance:
  - System.Object
  - Toscana.ToscaObject{Toscana.ToscaArtifactType}
  inheritedMembers:
  - Toscana.ToscaObject{Toscana.ToscaArtifactType}.CloudServiceArchive
  - Toscana.ToscaObject{Toscana.ToscaArtifactType}.DerivedFrom
  - Toscana.ToscaObject{Toscana.ToscaArtifactType}.IsRoot
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Toscana.ToscaArtifactType.Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{Toscana.ToscaArtifactType,Toscana.ToscaArtifactType},System.Func{Toscana.ToscaArtifactType,System.Boolean})
  - Toscana.ToscaArtifactType.Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{Toscana.ToscaArtifactType,Toscana.ToscaArtifactType})
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Toscana.ToscaArtifactType.Version
  commentId: P:Toscana.ToscaArtifactType.Version
  id: Version
  parent: Toscana.ToscaArtifactType
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: ToscaArtifactType.Version
  fullName: Toscana.ToscaArtifactType.Version
  type: Property
  source:
    remote:
      path: Toscana/ToscaArtifactType.cs
      branch: master
      repo: https://github.com/QualiSystems/Toscana.git
    id: Version
    path: Toscana/ToscaArtifactType.cs
    startLine: 14
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nAn optional version for the Artifact Type definition.\n"
  example: []
  syntax:
    content: public Version Version { get; set; }
    content.vb: Public Property Version As Version
    parameters: []
    return:
      type: System.Version
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Toscana.ToscaArtifactType.Description
  commentId: P:Toscana.ToscaArtifactType.Description
  id: Description
  parent: Toscana.ToscaArtifactType
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: ToscaArtifactType.Description
  fullName: Toscana.ToscaArtifactType.Description
  type: Property
  source:
    remote:
      path: Toscana/ToscaArtifactType.cs
      branch: master
      repo: https://github.com/QualiSystems/Toscana.git
    id: Description
    path: Toscana/ToscaArtifactType.cs
    startLine: 19
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nAn optional description for the Artifact Type.\n"
  example: []
  syntax:
    content: public string Description { get; set; }
    content.vb: Public Property Description As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Toscana.ToscaArtifactType.MimeType
  commentId: P:Toscana.ToscaArtifactType.MimeType
  id: MimeType
  parent: Toscana.ToscaArtifactType
  langs:
  - csharp
  - vb
  name: MimeType
  nameWithType: ToscaArtifactType.MimeType
  fullName: Toscana.ToscaArtifactType.MimeType
  type: Property
  source:
    remote:
      path: Toscana/ToscaArtifactType.cs
      branch: master
      repo: https://github.com/QualiSystems/Toscana.git
    id: MimeType
    path: Toscana/ToscaArtifactType.cs
    startLine: 24
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nThe required mime type property for the Artifact Type.\n"
  example: []
  syntax:
    content: public string MimeType { get; set; }
    content.vb: Public Property MimeType As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Toscana.ToscaArtifactType.FileExt
  commentId: P:Toscana.ToscaArtifactType.FileExt
  id: FileExt
  parent: Toscana.ToscaArtifactType
  langs:
  - csharp
  - vb
  name: FileExt
  nameWithType: ToscaArtifactType.FileExt
  fullName: Toscana.ToscaArtifactType.FileExt
  type: Property
  source:
    remote:
      path: Toscana/ToscaArtifactType.cs
      branch: master
      repo: https://github.com/QualiSystems/Toscana.git
    id: FileExt
    path: Toscana/ToscaArtifactType.cs
    startLine: 29
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nThe required file extension property for the Artifact Type.\n"
  example: []
  syntax:
    content: public string[] FileExt { get; set; }
    content.vb: Public Property FileExt As String()
    parameters: []
    return:
      type: System.String[]
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Toscana.ToscaArtifactType.Properties
  commentId: P:Toscana.ToscaArtifactType.Properties
  id: Properties
  parent: Toscana.ToscaArtifactType
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: ToscaArtifactType.Properties
  fullName: Toscana.ToscaArtifactType.Properties
  type: Property
  source:
    remote:
      path: Toscana/ToscaArtifactType.cs
      branch: master
      repo: https://github.com/QualiSystems/Toscana.git
    id: Properties
    path: Toscana/ToscaArtifactType.cs
    startLine: 34
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nAn optional list of property definitions for the Artifact Type.\n"
  example: []
  syntax:
    content: public Dictionary<string, ToscaPropertyDefinition> Properties { get; set; }
    content.vb: Public Property Properties As Dictionary(Of String, ToscaPropertyDefinition)
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,Toscana.ToscaPropertyDefinition}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Toscana.ToscaArtifactType.Base
  commentId: P:Toscana.ToscaArtifactType.Base
  id: Base
  parent: Toscana.ToscaArtifactType
  langs:
  - csharp
  - vb
  name: Base
  nameWithType: ToscaArtifactType.Base
  fullName: Toscana.ToscaArtifactType.Base
  type: Property
  source:
    remote:
      path: Toscana/ToscaArtifactType.cs
      branch: master
      repo: https://github.com/QualiSystems/Toscana.git
    id: Base
    path: Toscana/ToscaArtifactType.cs
    startLine: 41
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nReturns an entity that this entity derives from.\nIf this entity is root, null will be returned\nIf this entity derives from a non existing entity exception will be thrown\n"
  example: []
  syntax:
    content: public override ToscaArtifactType Base { get; }
    content.vb: Public Overrides ReadOnly Property Base As ToscaArtifactType
    parameters: []
    return:
      type: Toscana.ToscaArtifactType
  overridden: Toscana.ToscaObject{Toscana.ToscaArtifactType}.Base
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Toscana.ToscaArtifactType.SetDerivedFromToRoot(System.String)
  commentId: M:Toscana.ToscaArtifactType.SetDerivedFromToRoot(System.String)
  id: SetDerivedFromToRoot(System.String)
  parent: Toscana.ToscaArtifactType
  langs:
  - csharp
  - vb
  name: SetDerivedFromToRoot(String)
  nameWithType: ToscaArtifactType.SetDerivedFromToRoot(String)
  fullName: Toscana.ToscaArtifactType.SetDerivedFromToRoot(System.String)
  type: Method
  source:
    remote:
      path: Toscana/ToscaArtifactType.cs
      branch: master
      repo: https://github.com/QualiSystems/Toscana.git
    id: SetDerivedFromToRoot
    path: Toscana/ToscaArtifactType.cs
    startLine: 59
  assemblies:
  - Toscana
  namespace: Toscana
  summary: "\nSets DerivedFrom to point to root if it's not set\n"
  example: []
  syntax:
    content: public override void SetDerivedFromToRoot(string name)
    content.vb: Public Overrides Sub SetDerivedFromToRoot(name As String)
    parameters:
    - id: name
      type: System.String
      description: Object name
  overridden: Toscana.ToscaObject{Toscana.ToscaArtifactType}.SetDerivedFromToRoot(System.String)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Toscana
  commentId: N:Toscana
  isExternal: false
  name: Toscana
  nameWithType: Toscana
  fullName: Toscana
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Toscana.ToscaObject{Toscana.ToscaArtifactType}
  commentId: T:Toscana.ToscaObject{Toscana.ToscaArtifactType}
  parent: Toscana
  definition: Toscana.ToscaObject`1
  name: ToscaObject<ToscaArtifactType>
  nameWithType: ToscaObject<ToscaArtifactType>
  fullName: Toscana.ToscaObject<Toscana.ToscaArtifactType>
  nameWithType.vb: ToscaObject(Of ToscaArtifactType)
  fullname.vb: Toscana.ToscaObject(Of Toscana.ToscaArtifactType)
  name.vb: ToscaObject(Of ToscaArtifactType)
  spec.csharp:
  - uid: Toscana.ToscaObject`1
    name: ToscaObject
    nameWithType: ToscaObject
    fullName: Toscana.ToscaObject
  - name: <
    nameWithType: <
    fullName: <
  - uid: Toscana.ToscaArtifactType
    name: ToscaArtifactType
    nameWithType: ToscaArtifactType
    fullName: Toscana.ToscaArtifactType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Toscana.ToscaObject`1
    name: ToscaObject
    nameWithType: ToscaObject
    fullName: Toscana.ToscaObject
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Toscana.ToscaArtifactType
    name: ToscaArtifactType
    nameWithType: ToscaArtifactType
    fullName: Toscana.ToscaArtifactType
  - name: )
    nameWithType: )
    fullName: )
- uid: Toscana.ToscaObject{Toscana.ToscaArtifactType}.CloudServiceArchive
  commentId: F:Toscana.ToscaObject{Toscana.ToscaArtifactType}.CloudServiceArchive
  parent: Toscana.ToscaObject{Toscana.ToscaArtifactType}
  definition: Toscana.ToscaObject`1.CloudServiceArchive
  name: CloudServiceArchive
  nameWithType: ToscaObject<ToscaArtifactType>.CloudServiceArchive
  fullName: Toscana.ToscaObject<Toscana.ToscaArtifactType>.CloudServiceArchive
  nameWithType.vb: ToscaObject(Of ToscaArtifactType).CloudServiceArchive
  fullname.vb: Toscana.ToscaObject(Of Toscana.ToscaArtifactType).CloudServiceArchive
- uid: Toscana.ToscaObject{Toscana.ToscaArtifactType}.DerivedFrom
  commentId: P:Toscana.ToscaObject{Toscana.ToscaArtifactType}.DerivedFrom
  parent: Toscana.ToscaObject{Toscana.ToscaArtifactType}
  definition: Toscana.ToscaObject`1.DerivedFrom
  name: DerivedFrom
  nameWithType: ToscaObject<ToscaArtifactType>.DerivedFrom
  fullName: Toscana.ToscaObject<Toscana.ToscaArtifactType>.DerivedFrom
  nameWithType.vb: ToscaObject(Of ToscaArtifactType).DerivedFrom
  fullname.vb: Toscana.ToscaObject(Of Toscana.ToscaArtifactType).DerivedFrom
- uid: Toscana.ToscaObject{Toscana.ToscaArtifactType}.IsRoot
  commentId: M:Toscana.ToscaObject{Toscana.ToscaArtifactType}.IsRoot
  parent: Toscana.ToscaObject{Toscana.ToscaArtifactType}
  definition: Toscana.ToscaObject`1.IsRoot
  name: IsRoot()
  nameWithType: ToscaObject<ToscaArtifactType>.IsRoot()
  fullName: Toscana.ToscaObject<Toscana.ToscaArtifactType>.IsRoot()
  nameWithType.vb: ToscaObject(Of ToscaArtifactType).IsRoot()
  fullname.vb: Toscana.ToscaObject(Of Toscana.ToscaArtifactType).IsRoot()
  spec.csharp:
  - uid: Toscana.ToscaObject`1.IsRoot
    name: IsRoot
    nameWithType: ToscaObject<ToscaArtifactType>.IsRoot
    fullName: Toscana.ToscaObject<Toscana.ToscaArtifactType>.IsRoot
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.ToscaObject`1.IsRoot
    name: IsRoot
    nameWithType: ToscaObject(Of ToscaArtifactType).IsRoot
    fullName: Toscana.ToscaObject(Of Toscana.ToscaArtifactType).IsRoot
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Toscana.ToscaArtifactType.Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{Toscana.ToscaArtifactType,Toscana.ToscaArtifactType},System.Func{Toscana.ToscaArtifactType,System.Boolean})
  commentId: M:Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
  parent: Toscana.Common.EnumerableExtensions
  definition: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
  name: FromHierarchy<ToscaArtifactType>(Func<ToscaArtifactType, ToscaArtifactType>, Func<ToscaArtifactType, Boolean>)
  nameWithType: EnumerableExtensions.FromHierarchy<ToscaArtifactType>(Func<ToscaArtifactType, ToscaArtifactType>, Func<ToscaArtifactType, Boolean>)
  fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<Toscana.ToscaArtifactType>(System.Func<Toscana.ToscaArtifactType, Toscana.ToscaArtifactType>, System.Func<Toscana.ToscaArtifactType, System.Boolean>)
  nameWithType.vb: EnumerableExtensions.FromHierarchy(Of ToscaArtifactType)(Func(Of ToscaArtifactType, ToscaArtifactType), Func(Of ToscaArtifactType, Boolean))
  fullname.vb: Toscana.Common.EnumerableExtensions.FromHierarchy(Of Toscana.ToscaArtifactType)(System.Func(Of Toscana.ToscaArtifactType, Toscana.ToscaArtifactType), System.Func(Of Toscana.ToscaArtifactType, System.Boolean))
  name.vb: FromHierarchy(Of ToscaArtifactType)(Func(Of ToscaArtifactType, ToscaArtifactType), Func(Of ToscaArtifactType, Boolean))
  spec.csharp:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{``0,``0},System.Func{``0,System.Boolean})
    name: FromHierarchy<ToscaArtifactType>
    nameWithType: EnumerableExtensions.FromHierarchy<ToscaArtifactType>
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<Toscana.ToscaArtifactType>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Toscana.ToscaArtifactType
    name: ToscaArtifactType
    nameWithType: ToscaArtifactType
    fullName: Toscana.ToscaArtifactType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Toscana.ToscaArtifactType
    name: ToscaArtifactType
    nameWithType: ToscaArtifactType
    fullName: Toscana.ToscaArtifactType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Toscana.ToscaArtifactType
    name: ToscaArtifactType
    nameWithType: ToscaArtifactType
    fullName: Toscana.ToscaArtifactType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{``0,``0},System.Func{``0,System.Boolean})
    name: FromHierarchy(Of ToscaArtifactType)
    nameWithType: EnumerableExtensions.FromHierarchy(Of ToscaArtifactType)
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy(Of Toscana.ToscaArtifactType)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Toscana.ToscaArtifactType
    name: ToscaArtifactType
    nameWithType: ToscaArtifactType
    fullName: Toscana.ToscaArtifactType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Toscana.ToscaArtifactType
    name: ToscaArtifactType
    nameWithType: ToscaArtifactType
    fullName: Toscana.ToscaArtifactType
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Toscana.ToscaArtifactType
    name: ToscaArtifactType
    nameWithType: ToscaArtifactType
    fullName: Toscana.ToscaArtifactType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Toscana.ToscaArtifactType.Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{Toscana.ToscaArtifactType,Toscana.ToscaArtifactType})
  commentId: M:Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
  parent: Toscana.Common.EnumerableExtensions
  definition: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
  name: FromHierarchy<ToscaArtifactType>(Func<ToscaArtifactType, ToscaArtifactType>)
  nameWithType: EnumerableExtensions.FromHierarchy<ToscaArtifactType>(Func<ToscaArtifactType, ToscaArtifactType>)
  fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<Toscana.ToscaArtifactType>(System.Func<Toscana.ToscaArtifactType, Toscana.ToscaArtifactType>)
  nameWithType.vb: EnumerableExtensions.FromHierarchy(Of ToscaArtifactType)(Func(Of ToscaArtifactType, ToscaArtifactType))
  fullname.vb: Toscana.Common.EnumerableExtensions.FromHierarchy(Of Toscana.ToscaArtifactType)(System.Func(Of Toscana.ToscaArtifactType, Toscana.ToscaArtifactType))
  name.vb: FromHierarchy(Of ToscaArtifactType)(Func(Of ToscaArtifactType, ToscaArtifactType))
  spec.csharp:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{``0,``0})
    name: FromHierarchy<ToscaArtifactType>
    nameWithType: EnumerableExtensions.FromHierarchy<ToscaArtifactType>
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<Toscana.ToscaArtifactType>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Toscana.ToscaArtifactType
    name: ToscaArtifactType
    nameWithType: ToscaArtifactType
    fullName: Toscana.ToscaArtifactType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Toscana.ToscaArtifactType
    name: ToscaArtifactType
    nameWithType: ToscaArtifactType
    fullName: Toscana.ToscaArtifactType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(System.Func{``0,``0})
    name: FromHierarchy(Of ToscaArtifactType)
    nameWithType: EnumerableExtensions.FromHierarchy(Of ToscaArtifactType)
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy(Of Toscana.ToscaArtifactType)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Toscana.ToscaArtifactType
    name: ToscaArtifactType
    nameWithType: ToscaArtifactType
    fullName: Toscana.ToscaArtifactType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Toscana.ToscaArtifactType
    name: ToscaArtifactType
    nameWithType: ToscaArtifactType
    fullName: Toscana.ToscaArtifactType
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Toscana.ToscaObject`1
  commentId: T:Toscana.ToscaObject`1
  isExternal: false
  name: ToscaObject<T>
  nameWithType: ToscaObject<T>
  fullName: Toscana.ToscaObject<T>
  nameWithType.vb: ToscaObject(Of T)
  fullname.vb: Toscana.ToscaObject(Of T)
  name.vb: ToscaObject(Of T)
  spec.csharp:
  - uid: Toscana.ToscaObject`1
    name: ToscaObject
    nameWithType: ToscaObject
    fullName: Toscana.ToscaObject
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Toscana.ToscaObject`1
    name: ToscaObject
    nameWithType: ToscaObject
    fullName: Toscana.ToscaObject
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Toscana.ToscaObject`1.CloudServiceArchive
  commentId: F:Toscana.ToscaObject`1.CloudServiceArchive
  isExternal: false
  name: CloudServiceArchive
  nameWithType: ToscaObject<T>.CloudServiceArchive
  fullName: Toscana.ToscaObject<T>.CloudServiceArchive
  nameWithType.vb: ToscaObject(Of T).CloudServiceArchive
  fullname.vb: Toscana.ToscaObject(Of T).CloudServiceArchive
- uid: Toscana.ToscaObject`1.DerivedFrom
  commentId: P:Toscana.ToscaObject`1.DerivedFrom
  isExternal: false
  name: DerivedFrom
  nameWithType: ToscaObject<T>.DerivedFrom
  fullName: Toscana.ToscaObject<T>.DerivedFrom
  nameWithType.vb: ToscaObject(Of T).DerivedFrom
  fullname.vb: Toscana.ToscaObject(Of T).DerivedFrom
- uid: Toscana.ToscaObject`1.IsRoot
  commentId: M:Toscana.ToscaObject`1.IsRoot
  isExternal: false
  name: IsRoot()
  nameWithType: ToscaObject<T>.IsRoot()
  fullName: Toscana.ToscaObject<T>.IsRoot()
  nameWithType.vb: ToscaObject(Of T).IsRoot()
  fullname.vb: Toscana.ToscaObject(Of T).IsRoot()
  spec.csharp:
  - uid: Toscana.ToscaObject`1.IsRoot
    name: IsRoot
    nameWithType: ToscaObject<T>.IsRoot
    fullName: Toscana.ToscaObject<T>.IsRoot
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.ToscaObject`1.IsRoot
    name: IsRoot
    nameWithType: ToscaObject(Of T).IsRoot
    fullName: Toscana.ToscaObject(Of T).IsRoot
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
  commentId: M:Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: FromHierarchy<TSource>(TSource, Func<TSource, TSource>, Func<TSource, Boolean>)
  nameWithType: EnumerableExtensions.FromHierarchy<TSource>(TSource, Func<TSource, TSource>, Func<TSource, Boolean>)
  fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<TSource>(TSource, System.Func<TSource, TSource>, System.Func<TSource, System.Boolean>)
  nameWithType.vb: EnumerableExtensions.FromHierarchy(Of TSource)(TSource, Func(Of TSource, TSource), Func(Of TSource, Boolean))
  fullname.vb: Toscana.Common.EnumerableExtensions.FromHierarchy(Of TSource)(TSource, System.Func(Of TSource, TSource), System.Func(Of TSource, System.Boolean))
  name.vb: FromHierarchy(Of TSource)(TSource, Func(Of TSource, TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
    name: FromHierarchy<TSource>
    nameWithType: EnumerableExtensions.FromHierarchy<TSource>
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0},System.Func{``0,System.Boolean})
    name: FromHierarchy(Of TSource)
    nameWithType: EnumerableExtensions.FromHierarchy(Of TSource)
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Toscana.Common.EnumerableExtensions
  commentId: T:Toscana.Common.EnumerableExtensions
  parent: Toscana.Common
  isExternal: false
  name: EnumerableExtensions
  nameWithType: EnumerableExtensions
  fullName: Toscana.Common.EnumerableExtensions
- uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
  commentId: M:Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
  isExternal: true
  name: FromHierarchy<TSource>(TSource, Func<TSource, TSource>)
  nameWithType: EnumerableExtensions.FromHierarchy<TSource>(TSource, Func<TSource, TSource>)
  fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<TSource>(TSource, System.Func<TSource, TSource>)
  nameWithType.vb: EnumerableExtensions.FromHierarchy(Of TSource)(TSource, Func(Of TSource, TSource))
  fullname.vb: Toscana.Common.EnumerableExtensions.FromHierarchy(Of TSource)(TSource, System.Func(Of TSource, TSource))
  name.vb: FromHierarchy(Of TSource)(TSource, Func(Of TSource, TSource))
  spec.csharp:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
    name: FromHierarchy<TSource>
    nameWithType: EnumerableExtensions.FromHierarchy<TSource>
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.Common.EnumerableExtensions.FromHierarchy``1(``0,System.Func{``0,``0})
    name: FromHierarchy(Of TSource)
    nameWithType: EnumerableExtensions.FromHierarchy(Of TSource)
    fullName: Toscana.Common.EnumerableExtensions.FromHierarchy(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Toscana.Common
  commentId: N:Toscana.Common
  isExternal: false
  name: Toscana.Common
  nameWithType: Toscana.Common
  fullName: Toscana.Common
- uid: System.Version
  commentId: T:System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.Dictionary{System.String,Toscana.ToscaPropertyDefinition}
  commentId: T:System.Collections.Generic.Dictionary{System.String,Toscana.ToscaPropertyDefinition}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, ToscaPropertyDefinition>
  nameWithType: Dictionary<String, ToscaPropertyDefinition>
  fullName: System.Collections.Generic.Dictionary<System.String, Toscana.ToscaPropertyDefinition>
  nameWithType.vb: Dictionary(Of String, ToscaPropertyDefinition)
  fullname.vb: System.Collections.Generic.Dictionary(Of System.String, Toscana.ToscaPropertyDefinition)
  name.vb: Dictionary(Of String, ToscaPropertyDefinition)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Toscana.ToscaPropertyDefinition
    name: ToscaPropertyDefinition
    nameWithType: ToscaPropertyDefinition
    fullName: Toscana.ToscaPropertyDefinition
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Toscana.ToscaPropertyDefinition
    name: ToscaPropertyDefinition
    nameWithType: ToscaPropertyDefinition
    fullName: Toscana.ToscaPropertyDefinition
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Toscana.ToscaObject{Toscana.ToscaArtifactType}.Base
  commentId: P:Toscana.ToscaObject{Toscana.ToscaArtifactType}.Base
  parent: Toscana.ToscaObject{Toscana.ToscaArtifactType}
  definition: Toscana.ToscaObject`1.Base
  name: Base
  nameWithType: ToscaObject<ToscaArtifactType>.Base
  fullName: Toscana.ToscaObject<Toscana.ToscaArtifactType>.Base
  nameWithType.vb: ToscaObject(Of ToscaArtifactType).Base
  fullname.vb: Toscana.ToscaObject(Of Toscana.ToscaArtifactType).Base
- uid: Toscana.ToscaArtifactType
  commentId: T:Toscana.ToscaArtifactType
  parent: Toscana
  isExternal: false
  name: ToscaArtifactType
  nameWithType: ToscaArtifactType
  fullName: Toscana.ToscaArtifactType
- uid: Toscana.ToscaObject`1.Base
  commentId: P:Toscana.ToscaObject`1.Base
  isExternal: false
  name: Base
  nameWithType: ToscaObject<T>.Base
  fullName: Toscana.ToscaObject<T>.Base
  nameWithType.vb: ToscaObject(Of T).Base
  fullname.vb: Toscana.ToscaObject(Of T).Base
- uid: Toscana.ToscaObject{Toscana.ToscaArtifactType}.SetDerivedFromToRoot(System.String)
  commentId: M:Toscana.ToscaObject{Toscana.ToscaArtifactType}.SetDerivedFromToRoot(System.String)
  parent: Toscana.ToscaObject{Toscana.ToscaArtifactType}
  definition: Toscana.ToscaObject`1.SetDerivedFromToRoot(System.String)
  name: SetDerivedFromToRoot(String)
  nameWithType: ToscaObject<ToscaArtifactType>.SetDerivedFromToRoot(String)
  fullName: Toscana.ToscaObject<Toscana.ToscaArtifactType>.SetDerivedFromToRoot(System.String)
  nameWithType.vb: ToscaObject(Of ToscaArtifactType).SetDerivedFromToRoot(String)
  fullname.vb: Toscana.ToscaObject(Of Toscana.ToscaArtifactType).SetDerivedFromToRoot(System.String)
  spec.csharp:
  - uid: Toscana.ToscaObject`1.SetDerivedFromToRoot(System.String)
    name: SetDerivedFromToRoot
    nameWithType: ToscaObject<ToscaArtifactType>.SetDerivedFromToRoot
    fullName: Toscana.ToscaObject<Toscana.ToscaArtifactType>.SetDerivedFromToRoot
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.ToscaObject`1.SetDerivedFromToRoot(System.String)
    name: SetDerivedFromToRoot
    nameWithType: ToscaObject(Of ToscaArtifactType).SetDerivedFromToRoot
    fullName: Toscana.ToscaObject(Of Toscana.ToscaArtifactType).SetDerivedFromToRoot
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Toscana.ToscaObject`1.SetDerivedFromToRoot(System.String)
  commentId: M:Toscana.ToscaObject`1.SetDerivedFromToRoot(System.String)
  isExternal: true
  name: SetDerivedFromToRoot(String)
  nameWithType: ToscaObject<T>.SetDerivedFromToRoot(String)
  fullName: Toscana.ToscaObject<T>.SetDerivedFromToRoot(System.String)
  nameWithType.vb: ToscaObject(Of T).SetDerivedFromToRoot(String)
  fullname.vb: Toscana.ToscaObject(Of T).SetDerivedFromToRoot(System.String)
  spec.csharp:
  - uid: Toscana.ToscaObject`1.SetDerivedFromToRoot(System.String)
    name: SetDerivedFromToRoot
    nameWithType: ToscaObject<T>.SetDerivedFromToRoot
    fullName: Toscana.ToscaObject<T>.SetDerivedFromToRoot
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Toscana.ToscaObject`1.SetDerivedFromToRoot(System.String)
    name: SetDerivedFromToRoot
    nameWithType: ToscaObject(Of T).SetDerivedFromToRoot
    fullName: Toscana.ToscaObject(Of T).SetDerivedFromToRoot
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
